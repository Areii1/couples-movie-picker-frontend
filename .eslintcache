[{"/home/arpeja/projects/couples-movie-picker-frontend/src/index.js":"1","/home/arpeja/projects/couples-movie-picker-frontend/src/App.tsx":"2","/home/arpeja/projects/couples-movie-picker-frontend/src/components/profileBall/ProfileBall.tsx":"3","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getTrendingMovies.ts":"4","/home/arpeja/projects/couples-movie-picker-frontend/src/config/Config.js":"5","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/Auth.js":"6","/home/arpeja/projects/couples-movie-picker-frontend/src/components/puff/Puff.tsx":"7","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/uploadProfilePicture.js":"8","/home/arpeja/projects/couples-movie-picker-frontend/src/components/navigationBar/NavigationBar.tsx":"9","/home/arpeja/projects/couples-movie-picker-frontend/src/components/fireMeter/FireMeter.tsx":"10","/home/arpeja/projects/couples-movie-picker-frontend/src/views/MainView.tsx":"11","/home/arpeja/projects/couples-movie-picker-frontend/src/views/LogIn.tsx":"12","/home/arpeja/projects/couples-movie-picker-frontend/src/views/SignUp.tsx":"13","/home/arpeja/projects/couples-movie-picker-frontend/src/views/AccountSettings.tsx":"14"},{"size":316,"mtime":1608761078166,"results":"15","hashOfConfig":"16"},{"size":5795,"mtime":1610134926810,"results":"17","hashOfConfig":"16"},{"size":2283,"mtime":1610138705745,"results":"18","hashOfConfig":"16"},{"size":230,"mtime":1608919042782,"results":"19","hashOfConfig":"16"},{"size":464,"mtime":1610041956496,"results":"20","hashOfConfig":"16"},{"size":146,"mtime":1609007837333,"results":"21","hashOfConfig":"16"},{"size":1637,"mtime":1609781213293,"results":"22","hashOfConfig":"16"},{"size":369,"mtime":1610046303001,"results":"23","hashOfConfig":"16"},{"size":1609,"mtime":1610138763230,"results":"24","hashOfConfig":"16"},{"size":2608,"mtime":1610110102927,"results":"25","hashOfConfig":"16"},{"size":1341,"mtime":1610111305381,"results":"26","hashOfConfig":"16"},{"size":3825,"mtime":1610140806744,"results":"27","hashOfConfig":"16"},{"size":2234,"mtime":1610112156632,"results":"28","hashOfConfig":"16"},{"size":5015,"mtime":1610134057515,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1502he7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},"/home/arpeja/projects/couples-movie-picker-frontend/src/index.js",[],["62","63"],"/home/arpeja/projects/couples-movie-picker-frontend/src/App.tsx",["64"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { configureAmplify } from \"./config/Config\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { getTrendingMovies } from \"./apiService/getTrendingMovies\";\nimport { Auth } from \"aws-amplify\";\nimport { NavigationBar } from \"./components/navigationBar/NavigationBar\";\nimport { MainView } from \"./views/MainView\";\nimport { LogIn } from \"./views/LogIn\";\nimport { SignUp } from \"./views/SignUp\";\nimport { AccountSettings } from \"./views/AccountSettings\";\n\nconfigureAmplify();\n\nexport enum Status {\n  INITIAL,\n  LOADING,\n  SUCCESS,\n  ERROR,\n}\n\nexport type Process =\n  | { status: Status.INITIAL }\n  | { status: Status.LOADING }\n  | { status: Status.SUCCESS; data: any }\n  | { status: Status.ERROR; error: Error };\n\nexport const App = () => {\n  const [fireMeterSwitch, setFireMeterSwitch] = React.useState<any>({\n    position: 50,\n    locked: false,\n  });\n  const [\n    getTrendingMoviesProcess,\n    setGetTrendingMoviesProcess,\n  ] = React.useState<any>({ status: Status.INITIAL });\n\n  const [\n    getCurrentSessionProcess,\n    setGetCurrentSessionProcess,\n  ] = React.useState<any>({ status: Status.INITIAL });\n\n  const [\n    getCurrentAuthenticatedUserProcess,\n    setGetCurrentAuthenticatedUserProcess,\n  ] = React.useState<any>({ status: Status.INITIAL });\n\n  const initiateSession = async () => {\n    getUserInfo();\n    getMovies();\n  };\n\n  const getUserInfo = async () => {\n    try {\n      setGetCurrentSessionProcess({ status: Status.LOADING });\n      const getCurrentSessionResponse = await Auth.currentSession();\n      setGetCurrentSessionProcess({\n        status: Status.SUCCESS,\n        data: getCurrentSessionResponse,\n      });\n      try {\n        setGetCurrentAuthenticatedUserProcess({ status: Status.LOADING });\n        const getCurrentAuthenticatedUserResponse = await Auth.currentAuthenticatedUser();\n        setGetCurrentAuthenticatedUserProcess({\n          status: Status.SUCCESS,\n          data: getCurrentAuthenticatedUserResponse,\n        });\n      } catch (getCurrentAuthenticatedUserError) {\n        setGetCurrentAuthenticatedUserProcess({\n          status: Status.ERROR,\n          error: getCurrentAuthenticatedUserError,\n        });\n      }\n    } catch (getCurrentSessionError) {\n      setGetCurrentSessionProcess({\n        status: Status.ERROR,\n        error: getCurrentSessionError,\n      });\n    }\n  };\n\n  const getMovies = async () => {\n    try {\n      setGetTrendingMoviesProcess({ status: Status.LOADING });\n      const getTrendingMoviesResponse = await getTrendingMovies();\n      const paredGetTrendingMoviesResponse = await getTrendingMoviesResponse.json();\n      setGetTrendingMoviesProcess({\n        status: Status.SUCCESS,\n        data: paredGetTrendingMoviesResponse,\n      });\n    } catch (getTrendingMoviesError) {\n      setGetTrendingMoviesProcess({\n        status: Status.ERROR,\n        error: getTrendingMoviesError,\n      });\n    }\n  };\n\n  const keyDownHandler = (event: any) => {\n    if (!fireMeterSwitch.locked) {\n      if (event.key === \"ArrowLeft\") {\n        setFireMeterSwitch((freshState: any) => {\n          if (freshState.position - 5 <= 0) {\n            return {\n              position: 0,\n              locked: false,\n            };\n          }\n          return {\n            position: freshState.position - 5,\n            locked: false,\n          };\n        });\n      } else if (event.key === \"ArrowRight\") {\n        setFireMeterSwitch((freshState: any) => {\n          if (freshState.position + 5 >= 100) {\n            return {\n              position: 100,\n              locked: false,\n            };\n          }\n          return {\n            position: freshState.position + 5,\n            locked: false,\n          };\n        });\n      }\n    }\n  };\n\n  const handleSwitchButtonClick = () => {\n    setFireMeterSwitch({ position: fireMeterSwitch.position, locked: true });\n  };\n\n  React.useEffect(() => {\n    initiateSession();\n    window.addEventListener(\"keydown\", keyDownHandler);\n    return () => {\n      window.removeEventListener(\"keyDown\", keyDownHandler);\n    };\n  }, []);\n\n  return (\n    <ContentWrapper className=\"App\">\n      <NavigationBar\n        getCurrentAuthenticatedUserProcess={getCurrentAuthenticatedUserProcess}\n      />\n      <MainCard>\n        <Switch>\n          <Route exact path=\"/\">\n            <MainView\n              getTrendingMoviesProcess={getTrendingMoviesProcess}\n              fireMeterSwitch={fireMeterSwitch}\n              setFireMeterSwitch={setFireMeterSwitch}\n              handleSwitchButtonClick={handleSwitchButtonClick}\n            />\n          </Route>\n          <Route exact path=\"/login\">\n            <LogIn initiateSession={initiateSession} />\n          </Route>\n          <Route exact path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route exact path=\"/user\">\n            <AccountSettings\n              getCurrentSessionProcess={getCurrentSessionProcess}\n              getCurrentAuthenticatedUserProcess={\n                getCurrentAuthenticatedUserProcess\n              }\n              initiateSession={initiateSession}\n            />\n          </Route>\n          <Route exact path=\"/love\">\n            <div>\n              <h1>matches</h1>\n            </div>\n          </Route>\n        </Switch>\n      </MainCard>\n    </ContentWrapper>\n  );\n};\n\nconst ContentWrapper = styled.div`\n  margin: auto;\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst MainCard = styled.div`\n  width: 100%;\n  height: 600px;\n  background-color: white;\n  margin-top: 50px;\n  border-radius: 10px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const PrimaryHeadline = styled.h3`\n  font-size: 25px;\n  margin: 0;\n  font-weight: 400;\n`;",["65","66"],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/profileBall/ProfileBall.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getTrendingMovies.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/config/Config.js",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/Auth.js",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/puff/Puff.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/uploadProfilePicture.js",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/navigationBar/NavigationBar.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/fireMeter/FireMeter.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/MainView.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/LogIn.tsx",["67"],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/SignUp.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/AccountSettings.tsx",["68","69","70","71"],"import { Auth } from \"aws-amplify\";\nimport React from \"react\";\nimport { Redirect } from \"react-router\";\nimport styled from \"styled-components\";\nimport {\n  removeProfilePicture,\n  uploadProfilePicture,\n} from \"../apiService/uploadProfilePicture\";\nimport { Process, Status } from \"../App\";\nimport { ProfileBall } from \"../components/profileBall/ProfileBall\";\nimport { Puff } from \"../components/puff/Puff\";\nimport { Button, ButtonText } from \"./LogIn\";\n\ntype Props = {\n  getCurrentSessionProcess: any;\n  getCurrentAuthenticatedUserProcess: Process;\n  initiateSession: () => void;\n};\n\nexport const AccountSettings = (props: Props) => {\n  const [signOutProcess, setSignOutProcess] = React.useState<any>({\n    status: Status.INITIAL,\n  });\n\n  const [uploadPictureProcess, setUploadPictureProcess] = React.useState<any>({\n    status: Status.INITIAL,\n  });\n\n  const [removePictureProcess, setRemovePictureProcess] = React.useState<any>({\n    status: Status.INITIAL,\n  });\n\n  const [selectedFile, setSelectedFile] = React.useState<any>();\n\n  const uploadPicture = async (file: any) => {\n    if (props.getCurrentAuthenticatedUserProcess.status === Status.SUCCESS) {\n      try {\n        setUploadPictureProcess({ status: Status.LOADING });\n        const uploadPictureResponse = await uploadProfilePicture(\n          file.name,\n          file,\n          props.getCurrentAuthenticatedUserProcess.data.username\n        );\n        console.log(uploadPictureResponse, \"uploadPictureResponse\");\n        setUploadPictureProcess({\n          status: Status.SUCCESS,\n          data: uploadPictureResponse,\n        });\n      } catch (uploadPictureError) {\n        console.log(uploadPictureError, \"error\");\n        setUploadPictureProcess({\n          status: Status.ERROR,\n          error: uploadPictureError,\n        });\n      }\n    }\n  };\n\n  const removePicture = async () => {\n    try {\n      setRemovePictureProcess({ status: Status.LOADING });\n      const uploadPictureResponse = await removeProfilePicture();\n      setRemovePictureProcess({\n        status: Status.SUCCESS,\n        data: uploadPictureResponse,\n      });\n    } catch (uploadPictureError) {\n      setRemovePictureProcess({\n        status: Status.ERROR,\n        error: uploadPictureError,\n      });\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      setSignOutProcess({ status: Status.LOADING });\n      const signOutResponse = await Auth.signOut();\n      setSignOutProcess({\n        status: Status.SUCCESS,\n        data: signOutResponse,\n      });\n      props.initiateSession();\n    } catch (signOutError) {\n      setSignOutProcess({\n        status: Status.ERROR,\n        error: signOutError,\n      });\n    }\n  };\n\n  const selectFile = (event: any) => {\n    uploadPicture(event.target.files[0]);\n  };\n\n  console.log(props.getCurrentSessionProcess, \"getCurrentSessionProcess\");\n  if (props.getCurrentSessionProcess.error) {\n    console.log(\n      props.getCurrentSessionProcess.error,\n      \"props.getCurrentSessionProcess.error\"\n    );\n  }\n  return (\n    <>\n      {props.getCurrentAuthenticatedUserProcess.status === Status.SUCCESS && (\n        <>\n          <div>\n            <h3>Profile picture</h3>\n            <AvatarSection>\n              <ProfileBall\n                firstName={\n                  props.getCurrentAuthenticatedUserProcess.data.username\n                }\n                image={undefined}\n                isCurrentUser={false}\n                size={50}\n              />\n              <InputWrapper>\n                <FileInput\n                  type=\"file\"\n                  onChange={(event) => selectFile(event)}\n                />\n                <Button type=\"button\" title=\"upload\">\n                  <ButtonText>Upload</ButtonText>\n                </Button>\n              </InputWrapper>\n              <Button type=\"button\" onClick={removePicture} title=\"remove\">\n                <ButtonText>Remove</ButtonText>\n              </Button>\n            </AvatarSection>\n          </div>\n          <div>\n            {signOutProcess.status === Status.INITIAL && (\n              <Button type=\"button\" onClick={signOut} title=\"log out\">\n                <ButtonText>Log out</ButtonText>\n              </Button>\n            )}\n            {signOutProcess.status === Status.LOADING && (\n              <Puff size={50} fill=\"lightblue\" />\n            )}\n          </div>\n        </>\n      )}\n      {(props.getCurrentSessionProcess.status === Status.ERROR ||\n        props.getCurrentAuthenticatedUserProcess.status === Status.ERROR) && (\n        <>\n          {props.getCurrentSessionProcess &&\n            props.getCurrentSessionProcess.error === \"No current user\" && (\n              <Redirect to=\"login\" />\n            )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst AvatarSection = styled.div`\n  display: flex;\n`;\n\nconst FileInput = styled.input`\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nconst InputWrapper = styled.div`\n  width: 100px;\n  height: 30px;\n  position: relative;\n`;\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":141,"column":6,"nodeType":"78","endLine":141,"endColumn":8,"suggestions":"79"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"80","severity":1,"message":"81","line":6,"column":10,"nodeType":"82","messageId":"83","endLine":6,"endColumn":25},{"ruleId":"80","severity":1,"message":"84","line":25,"column":10,"nodeType":"82","messageId":"83","endLine":25,"endColumn":30},{"ruleId":"80","severity":1,"message":"85","line":29,"column":10,"nodeType":"82","messageId":"83","endLine":29,"endColumn":30},{"ruleId":"80","severity":1,"message":"86","line":33,"column":10,"nodeType":"82","messageId":"83","endLine":33,"endColumn":22},{"ruleId":"80","severity":1,"message":"87","line":33,"column":24,"nodeType":"82","messageId":"83","endLine":33,"endColumn":39},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'initiateSession' and 'keyDownHandler'. Either include them or remove the dependency array.","ArrayExpression",["90"],"@typescript-eslint/no-unused-vars","'PrimaryHeadline' is defined but never used.","Identifier","unusedVar","'uploadPictureProcess' is assigned a value but never used.","'removePictureProcess' is assigned a value but never used.","'selectedFile' is assigned a value but never used.","'setSelectedFile' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [initiateSession, keyDownHandler]",{"range":"93","text":"94"},[4105,4107],"[initiateSession, keyDownHandler]"]