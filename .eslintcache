[{"/home/arpeja/projects/couples-movie-picker-frontend/src/index.js":"1","/home/arpeja/projects/couples-movie-picker-frontend/src/App.tsx":"2","/home/arpeja/projects/couples-movie-picker-frontend/src/components/profileBall/ProfileBall.tsx":"3","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getTrendingMovies.ts":"4","/home/arpeja/projects/couples-movie-picker-frontend/src/config/Config.js":"5","/home/arpeja/projects/couples-movie-picker-frontend/src/components/puff/Puff.tsx":"6","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/uploadProfilePicture.js":"7","/home/arpeja/projects/couples-movie-picker-frontend/src/components/navigationBar/NavigationBar.tsx":"8","/home/arpeja/projects/couples-movie-picker-frontend/src/components/fireMeter/FireMeter.tsx":"9","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/FireIcon.tsx":"10","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/HeartIcon.tsx":"11","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/ImageIcon.tsx":"12","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getUser.ts":"13","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/removeProfilePicture.ts":"14","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/pairWithUser.ts":"15","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/SearchIcon.tsx":"16","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/PendingIcon.tsx":"17","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/cancelPairingRequest.tsx":"18","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/rejectIncomingRequest.ts":"19","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/acceptIncomingRequest.ts":"20","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/breakUpPartnership.ts":"21","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/randomizeProfilePicture.ts":"22","/home/arpeja/projects/couples-movie-picker-frontend/src/views/logIn/LogIn.tsx":"23","/home/arpeja/projects/couples-movie-picker-frontend/src/views/mainView/MainView.tsx":"24","/home/arpeja/projects/couples-movie-picker-frontend/src/views/signUp/SignUp.tsx":"25","/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/PartnershipView.tsx":"26","/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/searchSection/SearchSection.tsx":"27","/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/detailsSection/DetailsSection.tsx":"28","/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/requestsListSection/RequestsListSection.tsx":"29","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getUserInformation.ts":"30","/home/arpeja/projects/couples-movie-picker-frontend/src/views/accountSettingsView/pictureSection/PictureSection.tsx":"31","/home/arpeja/projects/couples-movie-picker-frontend/src/views/accountSettingsView/AccountSettingsView.tsx":"32","/home/arpeja/projects/couples-movie-picker-frontend/src/styles/Styles.ts":"33","/home/arpeja/projects/couples-movie-picker-frontend/src/styles/Variables.ts":"34","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/ColdIcon.tsx":"35","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/evaluateMovie.ts":"36","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/DownwardArrow.tsx":"37","/home/arpeja/projects/couples-movie-picker-frontend/src/views/matchesView/MatchesView.tsx":"38","/home/arpeja/projects/couples-movie-picker-frontend/src/views/movieView/MovieView.tsx":"39","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getMovieDetails.ts":"40","/home/arpeja/projects/couples-movie-picker-frontend/src/views/movieView/MovieViewUtilityFunctions.ts":"41","/home/arpeja/projects/couples-movie-picker-frontend/src/views/movieView/movieEvaluationSection/MovieEvaluationSection.tsx":"42","/home/arpeja/projects/couples-movie-picker-frontend/src/views/movieView/movieEvaluationSection/userEvaluationItem/UserEvaluationItem.tsx":"43","/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/likedMoviesSection/LikedMoviesSection.tsx":"44"},{"size":316,"mtime":1608761078166,"results":"45","hashOfConfig":"46"},{"size":11239,"mtime":1611912578897,"results":"47","hashOfConfig":"46"},{"size":3608,"mtime":1610794795311,"results":"48","hashOfConfig":"46"},{"size":229,"mtime":1610988226464,"results":"49","hashOfConfig":"46"},{"size":819,"mtime":1611154864405,"results":"50","hashOfConfig":"46"},{"size":1637,"mtime":1609781213293,"results":"51","hashOfConfig":"46"},{"size":172,"mtime":1611150614595,"results":"52","hashOfConfig":"46"},{"size":2688,"mtime":1611917399128,"results":"53","hashOfConfig":"46"},{"size":6178,"mtime":1611908871415,"results":"54","hashOfConfig":"46"},{"size":4752,"mtime":1611917214803,"results":"55","hashOfConfig":"46"},{"size":2008,"mtime":1611163548141,"results":"56","hashOfConfig":"46"},{"size":2119,"mtime":1610465732723,"results":"57","hashOfConfig":"46"},{"size":241,"mtime":1611152302016,"results":"58","hashOfConfig":"46"},{"size":249,"mtime":1611920352977,"results":"59","hashOfConfig":"46"},{"size":243,"mtime":1610649011557,"results":"60","hashOfConfig":"46"},{"size":1416,"mtime":1610568139239,"results":"61","hashOfConfig":"46"},{"size":5060,"mtime":1611396535461,"results":"62","hashOfConfig":"46"},{"size":250,"mtime":1610659142282,"results":"63","hashOfConfig":"46"},{"size":259,"mtime":1611074038285,"results":"64","hashOfConfig":"46"},{"size":259,"mtime":1610980789968,"results":"65","hashOfConfig":"46"},{"size":253,"mtime":1611079048345,"results":"66","hashOfConfig":"46"},{"size":224,"mtime":1611085426181,"results":"67","hashOfConfig":"46"},{"size":5167,"mtime":1611861518545,"results":"68","hashOfConfig":"46"},{"size":9828,"mtime":1611919259858,"results":"69","hashOfConfig":"46"},{"size":3872,"mtime":1611921663991,"results":"70","hashOfConfig":"46"},{"size":4633,"mtime":1611914668779,"results":"71","hashOfConfig":"46"},{"size":6420,"mtime":1611924645004,"results":"72","hashOfConfig":"46"},{"size":11949,"mtime":1611862365880,"results":"73","hashOfConfig":"46"},{"size":7010,"mtime":1611862577089,"results":"74","hashOfConfig":"46"},{"size":181,"mtime":1611150809963,"results":"75","hashOfConfig":"46"},{"size":15304,"mtime":1611934523670,"results":"76","hashOfConfig":"46"},{"size":3810,"mtime":1611924280947,"results":"77","hashOfConfig":"46"},{"size":479,"mtime":1611397978752,"results":"78","hashOfConfig":"46"},{"size":297,"mtime":1611421340795,"results":"79","hashOfConfig":"46"},{"size":11319,"mtime":1611908807286,"results":"80","hashOfConfig":"46"},{"size":251,"mtime":1611308750187,"results":"81","hashOfConfig":"46"},{"size":1941,"mtime":1611399471819,"results":"82","hashOfConfig":"46"},{"size":4458,"mtime":1611861795042,"results":"83","hashOfConfig":"46"},{"size":7725,"mtime":1611919342111,"results":"84","hashOfConfig":"46"},{"size":202,"mtime":1611435122524,"results":"85","hashOfConfig":"46"},{"size":700,"mtime":1611765072421,"results":"86","hashOfConfig":"46"},{"size":4954,"mtime":1611933347071,"results":"87","hashOfConfig":"46"},{"size":4729,"mtime":1611920083291,"results":"88","hashOfConfig":"46"},{"size":4819,"mtime":1611916716634,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1ou7zv4",{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"96"},"/home/arpeja/projects/couples-movie-picker-frontend/src/index.js",[],["186","187"],"/home/arpeja/projects/couples-movie-picker-frontend/src/App.tsx",["188","189","190"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { configureAmplify } from \"./config/Config\";\nimport { Route } from \"react-router-dom\";\nimport { NavigationBar } from \"./components/navigationBar/NavigationBar\";\nimport { MainView } from \"./views/mainView/MainView\";\nimport { LogIn } from \"./views/logIn/LogIn\";\nimport { SignUp } from \"./views/signUp/SignUp\";\nimport { AccountSettingsView } from \"./views/accountSettingsView/AccountSettingsView\";\nimport { getUser } from \"./apiService/getUser\";\nimport { PartnershipView } from \"./views/partnershipView/PartnershipView\";\nimport {\n  getCurrentSession,\n  getCurrentAuthenticatedUser,\n} from \"./apiService/getUserInformation\";\nimport { CognitoUserSession } from \"amazon-cognito-identity-js\";\nimport { UserInfo } from \"./types/Types\";\nimport { sizingScale } from \"./styles/Variables\";\nimport { MatchesView } from \"./views/matchesView/MatchesView\";\nimport { MovieView } from \"./views/movieView/MovieView\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconfigureAmplify();\n\nexport enum Status {\n  INITIAL,\n  LOADING,\n  SUCCESS,\n  ERROR,\n}\n\nexport type Process =\n  | { status: Status.INITIAL }\n  | { status: Status.LOADING }\n  | { status: Status.SUCCESS; data: any }\n  | { status: Status.ERROR; error: Error };\n\nexport type GetCurrentSessionProcess =\n  | { status: Status.INITIAL }\n  | { status: Status.LOADING }\n  | { status: Status.SUCCESS; data: CognitoUserSession }\n  | { status: Status.ERROR; error: Error };\n\nexport type GetUserItemProcess =\n  | { status: Status.INITIAL }\n  | { status: Status.LOADING }\n  | { status: Status.SUCCESS; data: UserInfo }\n  | { status: Status.ERROR; error: Error };\n\nexport const App = () => {\n  const [\n    getCurrentSessionProcess,\n    setGetCurrentSessionProcess,\n  ] = React.useState<GetCurrentSessionProcess>({ status: Status.INITIAL });\n\n  const [\n    getCurrentAuthenticatedUserProcess,\n    setGetCurrentAuthenticatedUserProcess,\n  ] = React.useState<Process>({ status: Status.INITIAL });\n\n  const [\n    getPairedUserProcess,\n    setGetPairedUserProcess,\n  ] = React.useState<GetUserItemProcess>({ status: Status.INITIAL });\n\n  const [\n    getUserItemProcess,\n    setGetUserItemProcess,\n  ] = React.useState<GetUserItemProcess>({\n    status: Status.INITIAL,\n  });\n\n  const getPairedUser = async (username: string, jwtToken?: string) => {\n    try {\n      setGetPairedUserProcess({ status: Status.LOADING });\n      const getPairedUserResponse = await getUser(username, jwtToken);\n      setGetPairedUserProcess({\n        status: Status.SUCCESS,\n        data: getPairedUserResponse,\n      });\n    } catch (getUserError) {\n      toast.error(\"Could not get partnered user information\");\n      setGetPairedUserProcess({ status: Status.ERROR, error: getUserError });\n    }\n  };\n\n  const getUserItem = async (username: string, jwtToken?: string) => {\n    try {\n      setGetUserItemProcess({ status: Status.LOADING });\n      const getUserResponse = await getUser(username, jwtToken);\n      console.log(getUserResponse, \"getUserResponse\");\n      setGetUserItemProcess({\n        status: Status.SUCCESS,\n        data: getUserResponse,\n      });\n    } catch (getUserError) {\n      toast.error(\"Could not get user information\");\n      setGetUserItemProcess({ status: Status.ERROR, error: getUserError });\n    }\n  };\n\n  const getUserInfo = async () => {\n    try {\n      setGetCurrentSessionProcess({ status: Status.LOADING });\n      const getCurrentSessionResponse = await getCurrentSession();\n      setGetCurrentSessionProcess({\n        status: Status.SUCCESS,\n        data: getCurrentSessionResponse,\n      });\n      try {\n        setGetCurrentAuthenticatedUserProcess({ status: Status.LOADING });\n        const getCurrentAuthenticatedUserResponse = await getCurrentAuthenticatedUser();\n        setGetCurrentAuthenticatedUserProcess({\n          status: Status.SUCCESS,\n          data: getCurrentAuthenticatedUserResponse,\n        });\n        getUserItem(\n          getCurrentAuthenticatedUserResponse.username,\n          getCurrentSessionResponse.getIdToken().getJwtToken()\n        );\n      } catch (getCurrentAuthenticatedUserError) {\n        toast.error(\"Could not get user information\");\n        setGetCurrentAuthenticatedUserProcess({\n          status: Status.ERROR,\n          error: getCurrentAuthenticatedUserError,\n        });\n      }\n    } catch (getCurrentSessionError) {\n      toast.error(\"Could not initiate session\");\n      setGetCurrentSessionProcess({\n        status: Status.ERROR,\n        error: getCurrentSessionError,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    getUserInfo();\n  }, []);\n\n  React.useEffect(() => {\n    if (\n      getCurrentSessionProcess.status === Status.ERROR &&\n      (getCurrentAuthenticatedUserProcess.status === Status.SUCCESS ||\n        getUserItemProcess.status === Status.SUCCESS)\n    ) {\n      setGetCurrentAuthenticatedUserProcess({\n        status: Status.ERROR,\n        error: { name: \"error\", message: \"current session does not exist\" },\n      });\n      setGetUserItemProcess({\n        status: Status.ERROR,\n        error: { name: \"error\", message: \"current session does not exist\" },\n      });\n    }\n  }, [getCurrentSessionProcess.status]);\n\n  React.useEffect(() => {\n    if (\n      getUserItemProcess.status === Status.SUCCESS &&\n      getCurrentSessionProcess.status === Status.SUCCESS\n    ) {\n      if (getUserItemProcess.data.partner) {\n        getPairedUser(\n          getUserItemProcess.data.partner.S,\n          getCurrentSessionProcess.data.getIdToken().getJwtToken()\n        );\n      } else if (getUserItemProcess.data.outgoingRequests) {\n        getPairedUser(\n          getUserItemProcess.data.outgoingRequests.S,\n          getCurrentSessionProcess.data.getIdToken().getJwtToken()\n        );\n      }\n    }\n  }, [getUserItemProcess.status]);\n\n  // console.log(getUserItemProcess, \"getUserItemProcess\");\n  // console.log(getCurrentSessionProcess, \"getCurrentSessionProcess\");\n  // console.log(\n  //   getCurrentAuthenticatedUserProcess,\n  //   \"getCurrentAuthenticatedUserProcess\"\n  // );\n  // console.log(getPairedUserProcess, \"getPairedUserProcess\");\n\n  return (\n    <ContentWrapper>\n      <NavigationBar\n        getCurrentAuthenticatedUserProcess={getCurrentAuthenticatedUserProcess}\n        getUserItemProcess={getUserItemProcess}\n      />\n      <div className=\"container\">\n        <Route exact path=\"/\">\n          {({ match }) => (\n            <CSSTransition\n              in={match !== null}\n              timeout={1000}\n              classNames=\"page\"\n              unmountOnExit\n            >\n              <div className=\"page\">\n                <MainView\n                  getCurrentSessionProcess={getCurrentSessionProcess}\n                  getUserItemProcess={getUserItemProcess}\n                  getUserItem={getUserItem}\n                  getCurrentAuthenticatedUserProcess={\n                    getCurrentAuthenticatedUserProcess\n                  }\n                />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n        <Route exact path=\"/login\">\n          {({ match }) => (\n            <CSSTransition\n              in={match !== null}\n              timeout={300}\n              classNames=\"page\"\n              unmountOnExit\n            >\n              <div className=\"page\">\n                <LogIn initiateSession={getUserInfo} />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n        <Route exact path=\"/signup\">\n          {({ match }) => (\n            <CSSTransition\n              in={match !== null}\n              timeout={300}\n              classNames=\"page\"\n              unmountOnExit\n            >\n              <div className=\"page\">\n                <SignUp />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n        <Route exact path=\"/user\">\n          {({ match }) => (\n            <CSSTransition\n              in={match !== null}\n              timeout={300}\n              classNames=\"page\"\n              unmountOnExit\n            >\n              <div className=\"page\">\n                <AccountSettingsView\n                  getCurrentSessionProcess={getCurrentSessionProcess}\n                  getCurrentAuthenticatedUserProcess={\n                    getCurrentAuthenticatedUserProcess\n                  }\n                  initiateSession={getUserInfo}\n                  getUserItemProcess={getUserItemProcess}\n                  getUserItem={getUserItem}\n                />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n        <Route exact path=\"/love\">\n          {({ match }) => (\n            <CSSTransition\n              in={match !== null}\n              timeout={300}\n              classNames=\"page\"\n              unmountOnExit\n            >\n              <div className=\"page\">\n                <PartnershipView\n                  getCurrentAuthenticatedUserProcess={\n                    getCurrentAuthenticatedUserProcess\n                  }\n                  getUserItemProcess={getUserItemProcess}\n                  getCurrentSessionProcess={getCurrentSessionProcess}\n                  getPairedUserProcess={getPairedUserProcess}\n                  getPairedUser={getPairedUser}\n                  getUserItem={getUserItem}\n                />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n        <Route exact path=\"/matches\">\n          {({ match }) => (\n            <CSSTransition\n              in={match !== null}\n              timeout={300}\n              classNames=\"page\"\n              unmountOnExit\n            >\n              <div className=\"page\">\n                <MatchesView\n                  getCurrentAuthenticatedUserProcess={\n                    getCurrentAuthenticatedUserProcess\n                  }\n                  getUserItemProcess={getUserItemProcess}\n                  getCurrentSessionProcess={getCurrentSessionProcess}\n                  getPairedUserProcess={getPairedUserProcess}\n                />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n        <Route exact path=\"/movie/:id\">\n          {({ match }) => (\n            <CSSTransition\n              in={match !== null}\n              timeout={300}\n              classNames=\"page\"\n              unmountOnExit\n            >\n              <div className=\"page\">\n                <MovieView\n                  getUserItemProcess={getUserItemProcess}\n                  getCurrentSessionProcess={getCurrentSessionProcess}\n                  getUserItem={getUserItem}\n                  getPairedUserProcess={getPairedUserProcess}\n                />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n      </div>\n      <ToastContainer\n        position=\"bottom-left\"\n        autoClose={10000}\n        hideProgressBar\n        newestOnTop\n        pauseOnFocusLoss\n        draggable={false}\n        pauseOnHover\n      />\n    </ContentWrapper>\n  );\n};\n\nconst ContentWrapper = styled.div`\n  margin: 0 auto ${`${sizingScale[9]}px`} auto;\n  width: ${`${sizingScale[13]}px`};\n  display: flex;\n  flex-direction: column;\n`;\n",["191","192"],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/profileBall/ProfileBall.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getTrendingMovies.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/config/Config.js",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/puff/Puff.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/uploadProfilePicture.js",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/navigationBar/NavigationBar.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/fireMeter/FireMeter.tsx",["193"],"import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { FireIcon } from \"../icons/FireIcon\";\nimport { ColdIcon } from \"../icons/ColdIcon\";\nimport { sizingScale } from \"../../styles/Variables\";\nimport { Status } from \"../../App\";\nimport { LikeMovieProcess } from \"../../views/mainView/MainView\";\n\ntype Props = {\n  evaluateItem: (movieId: string, score: number) => void;\n  likeMovieProcess: LikeMovieProcess;\n  movieId: string;\n};\n\nexport const FireMeter = (props: Props) => {\n  const [isDragging, setIsDragging] = React.useState<boolean>(false);\n  const [mouseXPosition, setMouseXPosition] = React.useState<number>(0);\n  const [mouseXStartPosition, setMouseXStartPosition] = React.useState<number>(\n    0\n  );\n  const [score, setScore] = React.useState<number>(50);\n  const [startingScore, setStartingScore] = React.useState<number>(50);\n\n  const handleHotIconButtonClick = () => {\n    setScore(100);\n    props.evaluateItem(props.movieId, 100);\n  };\n  const handleColdIconButtonClick = () => {\n    setScore(0);\n    props.evaluateItem(props.movieId, 0);\n  };\n  const switchButtonClick = () => {\n    props.evaluateItem(props.movieId, score);\n  };\n\n  const handleOnMouseDown = (event: any) => {\n    setMouseXStartPosition(mouseXPosition);\n    setStartingScore(score);\n    setIsDragging(true);\n  };\n\n  const handleOnMouseUp = (event: any) => {\n    setIsDragging(false);\n    props.evaluateItem(props.movieId, score);\n  };\n\n  const keyDownHandler = (event: any) => {\n    if (event.key === \"ArrowLeft\") {\n      setScore((freshState: any) => {\n        if (freshState - 5 <= 0) {\n          return 0;\n        } else {\n          return freshState.position - 5;\n        }\n      });\n    } else if (event.key === \"ArrowRight\") {\n      setScore((freshState: any) => {\n        if (freshState + 5 >= 100) {\n          return 100;\n        } else {\n          return freshState.position + 5;\n        }\n      });\n    }\n  };\n\n  const handleMouseMove = (event: any) => {\n    setMouseXPosition(event.pageX);\n  };\n\n  React.useEffect(() => {\n    if (isDragging) {\n      if (mouseXStartPosition < mouseXPosition) {\n        const newPos =\n          (mouseXPosition - mouseXStartPosition) / 2.56 + startingScore;\n        setScore(Math.floor(newPos <= 100 ? newPos : 100));\n      } else {\n        const newPos =\n          startingScore - (mouseXStartPosition - mouseXPosition) / 2.56;\n        setScore(Math.floor(newPos >= 0 ? newPos : 0));\n      }\n    }\n  }, [mouseXPosition]);\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", keyDownHandler);\n    document.onmousemove = handleMouseMove;\n    return () => {\n      window.removeEventListener(\"keyDown\", keyDownHandler);\n      document.onmousemove = () => {};\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (props.likeMovieProcess.status === Status.SUCCESS) {\n      setScore(50);\n    }\n  }, [props.likeMovieProcess.status]);\n\n  return (\n    <Wrapper\n      onMouseUp={handleOnMouseUp}\n      isLoading={props.likeMovieProcess.status === Status.LOADING}\n    >\n      <ColdIconButton\n        onClick={handleColdIconButtonClick}\n        title=\"horrible\"\n        disabled={props.likeMovieProcess.status === Status.LOADING}\n      >\n        <ColdIcon\n          size={sizingScale[6]}\n          score={score}\n          isGray={props.likeMovieProcess.status === Status.LOADING}\n          animate={false}\n        />\n      </ColdIconButton>\n      <HotIconButton\n        onClick={handleHotIconButtonClick}\n        title=\"awesome\"\n        disabled={props.likeMovieProcess.status === Status.LOADING}\n      >\n        <FireIcon\n          size={sizingScale[6]}\n          score={score}\n          isGray={props.likeMovieProcess.status === Status.LOADING}\n          animate={false}\n        />\n      </HotIconButton>\n      <MeterSwitchButton\n        onClick={switchButtonClick}\n        onMouseDown={handleOnMouseDown}\n        isDragging={isDragging}\n        score={score}\n        disabled={props.likeMovieProcess.status === Status.LOADING}\n      >\n        <h5>{score}</h5>\n      </MeterSwitchButton>\n    </Wrapper>\n  );\n};\n\ntype WrapperProps = {\n  isLoading: boolean;\n};\n\nconst getWrapperBackground = (isLoading: boolean) => {\n  if (isLoading) {\n    return css`\n      background: gray;\n    `;\n  } else {\n    return css`\n      background: linear-gradient(\n        90deg,\n        rgba(8, 82, 151, 1) 0%,\n        rgba(220, 106, 1, 1) 100%\n      );\n    `;\n  }\n};\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  width: ${`${sizingScale[11]}px`};\n  height: ${`${sizingScale[5]}px`};\n  ${(props: WrapperProps) => getWrapperBackground(props.isLoading)}\n  border-radius: ${`${sizingScale[5]}px`};\n  box-shadow: 10px 5px 5px #b3b2b2;\n`;\n\nconst ColdIconButton = styled.button`\n  width: ${`${sizingScale[6]}px`};\n  height: ${`${sizingScale[6]}px`};\n  margin: ${`${sizingScale[2] * -1}px`} 0 0 ${`${sizingScale[3] * -1}px`};\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n`;\n\nconst HotIconButton = styled(ColdIconButton)`\n  margin: ${`${sizingScale[2] * -1}px`} ${`${sizingScale[3] * -1}px`} 0 0;\n  cursor: pointer;\n`;\n\nconst getMeterSwitchPxPosition = (fireMeterSwitchPosition: any) => {\n  const meterSwitcCircleRadius = 25;\n  const barMultiplier = 2.56;\n  const positionIsLowMax = fireMeterSwitchPosition === 100;\n  if (positionIsLowMax) {\n    const finalPos =\n      fireMeterSwitchPosition * barMultiplier - meterSwitcCircleRadius;\n    return `${finalPos}px`;\n  } else {\n    const finalPos =\n      fireMeterSwitchPosition * barMultiplier - meterSwitcCircleRadius;\n    return `${finalPos}px`;\n  }\n};\n\ntype MeterSwitchButtonProps = {\n  isDragging: boolean;\n  score: number;\n  disabled: boolean;\n};\n\nconst MeterSwitchButton = styled.button`\n  width: ${`${sizingScale[6]}px`};\n  height: ${`${sizingScale[6]}px`};\n  border-radius: ${`${sizingScale[6]}px`};\n  background-color: white;\n  border: ${(props: MeterSwitchButtonProps) =>\n    props.isDragging ? \"2px solid green;\" : \"1px solid lightgray;\"};\n  position: absolute;\n  top: calc(50% - 25px);\n  opacity: 0.9;\n  left: ${(props: MeterSwitchButtonProps) =>\n    getMeterSwitchPxPosition(props.score)};\n  cursor: pointer;\n`;\n","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/FireIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/HeartIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/ImageIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getUser.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/removeProfilePicture.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/pairWithUser.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/SearchIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/PendingIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/cancelPairingRequest.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/rejectIncomingRequest.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/acceptIncomingRequest.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/breakUpPartnership.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/randomizeProfilePicture.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/logIn/LogIn.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/mainView/MainView.tsx",["194"],"import React from \"react\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Process, Status } from \"../../App\";\nimport { FireMeter } from \"../../components/fireMeter/FireMeter\";\nimport { PrimaryHeadline } from \"../../styles/Styles\";\nimport { borderRadius, sizingScale } from \"../../styles/Variables\";\nimport { getTrendingMovies } from \"../../apiService/getTrendingMovies\";\nimport { evaluateMovie } from \"../../apiService/evaluateMovie\";\nimport { AnimateType, HeartIcon } from \"../../components/icons/HeartIcon\";\n\ntype Props = {\n  getCurrentSessionProcess: Process;\n  getUserItemProcess: Process;\n  getUserItem: (username: string, jwtToken: string) => void;\n  getCurrentAuthenticatedUserProcess: Process;\n};\n\nexport type LikeMovieProcess =\n  | {\n      status: Status.INITIAL;\n    }\n  | { status: Status.LOADING; score: number }\n  | { status: Status.SUCCESS; data: any }\n  | { status: Status.ERROR; error: any };\n\nexport const MainView = (props: Props) => {\n  const [\n    getTrendingMoviesProcess,\n    setGetTrendingMoviesProcess,\n  ] = React.useState<Process>({ status: Status.INITIAL });\n\n  const [swipingIndex, setSwipingIndex] = React.useState<number>(0);\n\n  const [\n    likeMovieProcess,\n    setLikeMovieProcess,\n  ] = React.useState<LikeMovieProcess>({\n    status: Status.INITIAL,\n  });\n\n  const getMovies = async () => {\n    try {\n      setGetTrendingMoviesProcess({ status: Status.LOADING });\n      const getTrendingMoviesResponse = await getTrendingMovies();\n      const parsedGetTrendingMoviesResponse = await getTrendingMoviesResponse.json();\n      setGetTrendingMoviesProcess({\n        status: Status.SUCCESS,\n        data: parsedGetTrendingMoviesResponse,\n      });\n    } catch (getTrendingMoviesError) {\n      toast.error(\"Could not fetch movies list\");\n      setGetTrendingMoviesProcess({\n        status: Status.ERROR,\n        error: getTrendingMoviesError,\n      });\n    }\n  };\n\n  const evaluateItem = async (movieId: string, score: number) => {\n    if (\n      props.getCurrentSessionProcess.status === Status.SUCCESS &&\n      getTrendingMoviesProcess.status === Status.SUCCESS &&\n      likeMovieProcess.status !== Status.LOADING\n    ) {\n      try {\n        setLikeMovieProcess({ status: Status.LOADING, score });\n        const likeMovieResponse = await evaluateMovie(\n          props.getCurrentSessionProcess.data.getIdToken().getJwtToken(),\n          movieId,\n          score\n        );\n        setSwipingIndex(swipingIndex + 1);\n        setLikeMovieProcess({\n          status: Status.SUCCESS,\n          data: likeMovieResponse,\n        });\n      } catch (likeMovieError) {\n        toast.error(\"Failed to evaluate movie\");\n        setSwipingIndex(swipingIndex + 1);\n        setLikeMovieProcess({\n          status: Status.ERROR,\n          error: likeMovieError,\n        });\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    if (\n      props.getUserItemProcess.status === Status.SUCCESS &&\n      props.getCurrentSessionProcess.status === Status.SUCCESS\n    ) {\n      props.getUserItem(\n        props.getUserItemProcess.data.username.S,\n        props.getCurrentSessionProcess.data.getIdToken().getJwtToken()\n      );\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (props.getUserItemProcess.status === Status.SUCCESS) {\n      getMovies();\n    }\n  }, [props.getUserItemProcess.status]);\n\n  const getFilteredList = () => {\n    if (getTrendingMoviesProcess.status === Status.SUCCESS) {\n      return getTrendingMoviesProcess.data.results.filter((movie: any) => {\n        if (\n          props.getUserItemProcess.status === Status.SUCCESS &&\n          props.getUserItemProcess.data.likedMovies\n        ) {\n          return (\n            props.getUserItemProcess.data.likedMovies.L.find(\n              (likedMovie: any) => movie.id === parseInt(likedMovie.M.id.S, 10)\n            ) === undefined\n          );\n        } else {\n          return true;\n        }\n      });\n    } else {\n      return [];\n    }\n  };\n\n  const getImageSrc = () => {\n    if (likeMovieProcess.status === Status.LOADING) {\n      if (filteredList[swipingIndex + 1] !== undefined) {\n        return `https://image.tmdb.org/t/p/w500/${\n          filteredList[swipingIndex + 1].backdrop_path\n        }`;\n      } else {\n        return \"\";\n      }\n    } else {\n      return `https://image.tmdb.org/t/p/w500/${filteredList[swipingIndex].backdrop_path}`;\n    }\n  };\n\n  const getImageAlt = () => {\n    if (likeMovieProcess.status === Status.LOADING) {\n      if (filteredList[swipingIndex + 1] !== undefined) {\n        return filteredList[swipingIndex + 1].original_title;\n      } else {\n        return \"\";\n      }\n    } else {\n      return filteredList[swipingIndex].original_title;\n    }\n  };\n\n  const viewInitialized =\n    props.getCurrentAuthenticatedUserProcess.status === Status.SUCCESS &&\n    props.getCurrentSessionProcess.status === Status.SUCCESS &&\n    props.getUserItemProcess.status === Status.SUCCESS &&\n    getTrendingMoviesProcess.status === Status.SUCCESS;\n\n  const filteredList = getFilteredList();\n  return (\n    <Wrapper>\n      {!viewInitialized && (\n        <div>\n          <ImagePlaceholder />\n          <TitlePlaceholder />\n        </div>\n      )}\n      {viewInitialized && (\n        <>\n          {filteredList.length > 0 && (\n            <div>\n              <ImageSection>\n                <Image src={getImageSrc()} alt={getImageAlt()} />\n                {likeMovieProcess.status === Status.LOADING && (\n                  <SwipingImageWrapper score={likeMovieProcess.score}>\n                    <SwipingImageContentWrapper>\n                      <SwipingImageIconWrapper>\n                        {likeMovieProcess.score >= 50 && (\n                          <HeartIcon\n                            size={sizingScale[10]}\n                            isRed={false}\n                            animate={AnimateType.NONE}\n                          />\n                        )}\n                        {likeMovieProcess.score < 50 && (\n                          <SwipingMark>✕</SwipingMark>\n                        )}\n                      </SwipingImageIconWrapper>\n                      <Image\n                        src={`https://image.tmdb.org/t/p/w500/${filteredList[swipingIndex].backdrop_path}`}\n                        alt={filteredList[swipingIndex].original_title}\n                      />\n                    </SwipingImageContentWrapper>\n                  </SwipingImageWrapper>\n                )}\n              </ImageSection>\n              <DetailsSection>\n                <Link to={`movie/${filteredList[swipingIndex].id}`}>\n                  <Title>{filteredList[swipingIndex].original_title}</Title>\n                </Link>\n                <FireMeterWrapper>\n                  <FireMeter\n                    evaluateItem={evaluateItem}\n                    movieId={filteredList[swipingIndex].id}\n                    likeMovieProcess={likeMovieProcess}\n                  />\n                </FireMeterWrapper>\n              </DetailsSection>\n            </div>\n          )}\n          {filteredList.length === 0 && <h5>everything swiped</h5>}\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nconst ImageSection = styled.div`\n  margin: ${`${sizingScale[6] * -1}px`} 0 0 ${`${sizingScale[6] * -1}px`};\n  height: ${`${sizingScale[11]}px`};\n  position: relative;\n`;\n\nconst Title = styled(PrimaryHeadline)`\n  color: #808080;\n  word-wrap: break-word;\n`;\n\nexport const TitlePlaceholder = styled.div`\n  margin: ${`${sizingScale[6]}px auto 0 auto`};\n  height: ${`${sizingScale[5]}px`};\n  width: ${`${sizingScale[10]}px`};\n  background-color: #e9e9e9;\n`;\n\nconst DetailsSection = styled.div`\n  margin: ${`${sizingScale[3]}px`} 0 0 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: ${`${sizingScale[13] - sizingScale[6] * 2}px`};\n`;\n\nconst slideImageRight = keyframes`\n  from {\n    left: 0;\n    top: 0;\n    opacity: 1;\n  }\n  to {\n    top: ${`${sizingScale[5] * -1}px`};\n    left: ${`${sizingScale[12]}px`};\n    opacity: 0.3\n  }\n`;\n\nconst slideImageLeft = keyframes`\n  from {\n    top: 0;\n    left: 0;\n    opacity: 1;\n  }\n  to {\n    top: ${`${sizingScale[4] * -1}px`};\n    left: ${`${sizingScale[12] * -1}px`};\n    opacity: 0;\n  }\n`;\n\nconst getAnimation = (score: number) => {\n  if (score >= 50) {\n    return css`\n      animation: ${slideImageRight} 0.5s linear forwards;\n    `;\n  } else {\n    return css`\n      animation: ${slideImageLeft} 0.5s linear forwards;\n    `;\n  }\n};\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n`;\n\nconst Image = styled.img`\n  border-top-left-radius: ${`${borderRadius}px`};\n  border-top-right-radius: ${`${borderRadius}px`};\n  max-height: ${`${sizingScale[11]}px`};\n  width: ${`${sizingScale[13]}px`};\n`;\n\nexport const ImagePlaceholder = styled.div`\n  height: ${`${sizingScale[11]}px`};\n  width: ${`${sizingScale[12]}px`};\n  margin: auto;\n  background-color: #e9e9e9;\n`;\n\ntype SwipingImageWrapperProps = {\n  score: number;\n};\n\nconst SwipingImageWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: ${`${sizingScale[11]}px`};\n  width: ${`${sizingScale[13]}px`};\n  ${(props: SwipingImageWrapperProps) => getAnimation(props.score)}\n`;\n\nconst SwipingImageIconWrapper = styled.div`\n  position: absolute;\n  top: ${`calc(50% - ${sizingScale[10] / 2}px)`};\n  left: ${`calc(50% - ${sizingScale[10] / 2}px)`};\n  animation: ${fadeOut} 0.5s linear forwards;\n`;\n\nconst SwipingImageContentWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst SwipingMark = styled.h5`\n  color: red;\n  font-size: ${`${sizingScale[10]}px`};\n  margin: -40px 0 0 0;\n  vertical-align: text-top;\n`;\n\nconst FireMeterWrapper = styled.div`\n  margin: ${`${sizingScale[8]}px`} auto 0 auto;\n`;\n","/home/arpeja/projects/couples-movie-picker-frontend/src/views/signUp/SignUp.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/PartnershipView.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/searchSection/SearchSection.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/detailsSection/DetailsSection.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/requestsListSection/RequestsListSection.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getUserInformation.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/accountSettingsView/pictureSection/PictureSection.tsx",["195","196"],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/accountSettingsView/AccountSettingsView.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/styles/Styles.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/styles/Variables.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/ColdIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/evaluateMovie.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/DownwardArrow.tsx",["197"],"import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\ntype Props = {\n  size: number;\n};\n\nexport const DownwardArrow = (props: Props) => {\n  return (\n    <Svg\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      height={`${props.size}px`}\n      width={`${props.size}px`}\n      viewBox=\"0 0 490.688 490.688\"\n      xmlSpace=\"preserve\"\n    >\n      <path\n        fill=\"#607D8B\"\n        d=\"M472.328,216.529L245.213,443.665L18.098,216.529c-4.237-4.093-10.99-3.975-15.083,0.262\n\t\tc-3.992,4.134-3.992,10.687,0,14.82l234.667,234.667c4.165,4.164,10.917,4.164,15.083,0l234.667-234.667\n\t\tc4.093-4.237,3.975-10.99-0.262-15.083c-4.134-3.993-10.687-3.993-14.821,0L472.328,216.529z\"\n      />\n      <path\n        fill=\"#607D8B\"\n        d=\"M472.328,24.529L245.213,251.665L18.098,24.529c-4.237-4.093-10.99-3.975-15.083,0.262\n\t\tc-3.992,4.134-3.992,10.687,0,14.821l234.667,234.667c4.165,4.164,10.917,4.164,15.083,0L487.432,39.612\n\t\tc4.237-4.093,4.354-10.845,0.262-15.083c-4.093-4.237-10.845-4.354-15.083-0.262c-0.089,0.086-0.176,0.173-0.262,0.262\n\t\tL472.328,24.529z\"\n      />\n      <path\n        d=\"M245.213,469.415c-2.831,0.005-5.548-1.115-7.552-3.115L2.994,231.633c-4.093-4.237-3.975-10.99,0.262-15.083\n\tc4.134-3.992,10.687-3.992,14.82,0l227.136,227.115l227.115-227.136c4.237-4.093,10.99-3.975,15.083,0.262\n\tc3.993,4.134,3.993,10.687,0,14.821L252.744,466.279C250.748,468.28,248.04,469.408,245.213,469.415z\"\n      />\n      <path\n        d=\"M245.213,277.415c-2.831,0.005-5.548-1.115-7.552-3.115L2.994,39.633c-4.093-4.237-3.975-10.99,0.262-15.083\n\tc4.134-3.992,10.687-3.992,14.821,0l227.136,227.115L472.328,24.529c4.093-4.237,10.845-4.354,15.083-0.262\n\ts4.354,10.845,0.262,15.083c-0.086,0.089-0.173,0.176-0.262,0.262L252.744,274.279C250.748,276.28,248.04,277.408,245.213,277.415z\"\n      />\n    </Svg>\n  );\n};\n\nconst Svg = styled.svg`\n  enable-background: new 0 0 512 512;\n`;\n","/home/arpeja/projects/couples-movie-picker-frontend/src/views/matchesView/MatchesView.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/movieView/MovieView.tsx",["198"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { toast } from \"react-toastify\";\nimport { GetUserItemProcess, Process, Status } from \"../../App\";\nimport { fontSizes, sizingScale } from \"../../styles/Variables\";\nimport { getMovieDetails } from \"../../apiService/getMovieDetails\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  PrimaryHeadline,\n  SecondaryHeadline,\n  TertiaryHeadline,\n} from \"../../styles/Styles\";\nimport { CardContentWrapper } from \"../logIn/LogIn\";\nimport { MovieEvaluationSection } from \"./movieEvaluationSection/MovieEvaluationSection\";\nimport { evaluateMovie } from \"../../apiService/evaluateMovie\";\nimport { LikeMovieProcess } from \"../mainView/MainView\";\nimport { ImagePlaceholder, TitlePlaceholder } from \"../mainView/MainView\";\n\ntype Props = {\n  getCurrentSessionProcess: Process;\n  getUserItemProcess: GetUserItemProcess;\n  getUserItem: (username: string, jwtToken: string) => void;\n  getPairedUserProcess: GetUserItemProcess;\n};\ninterface ParamTypes {\n  id?: string;\n}\n\nexport const MovieView = (props: Props) => {\n  const [\n    getMovieDetailsProcess,\n    setGetMovieDetailsProcess,\n  ] = React.useState<Process>({ status: Status.INITIAL });\n\n  const [\n    likeMovieProcess,\n    setLikeMovieProcess,\n  ] = React.useState<LikeMovieProcess>({\n    status: Status.INITIAL,\n  });\n\n  const { id } = useParams<ParamTypes>();\n\n  const getMovie = async () => {\n    if (id) {\n      try {\n        setGetMovieDetailsProcess({ status: Status.LOADING });\n        const getMovieDetailsResponse = await getMovieDetails(id);\n        const parsedGetMovieDetailsResponse = await getMovieDetailsResponse.json();\n        setGetMovieDetailsProcess({\n          status: Status.SUCCESS,\n          data: parsedGetMovieDetailsResponse,\n        });\n      } catch (getMovieDetailsError) {\n        toast.error(\"Could not get movie details\");\n        setGetMovieDetailsProcess({\n          status: Status.ERROR,\n          error: getMovieDetailsError,\n        });\n      }\n    } else {\n      return;\n    }\n  };\n\n  const evaluateItem = async (movieId: string, score: number) => {\n    if (\n      props.getCurrentSessionProcess.status === Status.SUCCESS &&\n      getMovieDetailsProcess.status === Status.SUCCESS &&\n      props.getUserItemProcess.status === Status.SUCCESS &&\n      likeMovieProcess.status !== Status.LOADING\n    ) {\n      try {\n        setLikeMovieProcess({ status: Status.LOADING, score });\n        const likeMovieResponse = await evaluateMovie(\n          props.getCurrentSessionProcess.data.getIdToken().getJwtToken(),\n          movieId,\n          score\n        );\n        setLikeMovieProcess({\n          status: Status.SUCCESS,\n          data: likeMovieResponse,\n        });\n        props.getUserItem(\n          props.getUserItemProcess.data.username.S,\n          props.getCurrentSessionProcess.data.getIdToken().getJwtToken()\n        );\n      } catch (likeMovieError) {\n        toast.error(\"Failed to evaluate movie\");\n        setLikeMovieProcess({\n          status: Status.ERROR,\n          error: likeMovieError,\n        });\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    if (props.getUserItemProcess.status === Status.SUCCESS) {\n      getMovie();\n    }\n  }, [props.getUserItemProcess.status]);\n\n  const getGenresStr = () => {\n    if (getMovieDetailsProcess.status === Status.SUCCESS) {\n      if (getMovieDetailsProcess.data.genres.length > 3) {\n        const filteredList = getMovieDetailsProcess.data.genres.filter(\n          (detail: any, index: number) => index < 3\n        );\n        return filteredList.map((genre: any) => genre.name).join(\", \");\n      } else {\n        return getMovieDetailsProcess.data.genres\n          .map((genre: any) => genre.name)\n          .join(\", \");\n      }\n    } else {\n      return \"\";\n    }\n  };\n\n  const getRuntimeStr = () => {\n    if (getMovieDetailsProcess.status === Status.SUCCESS) {\n      if (getMovieDetailsProcess.data.runtime > 60) {\n        const hours = Math.floor(getMovieDetailsProcess.data.runtime / 60);\n        const minutes = getMovieDetailsProcess.data.runtime - hours * 60;\n        return `${hours}h${minutes}min`;\n      } else {\n        return `${getMovieDetailsProcess.data.runtime}min`;\n      }\n    }\n  };\n\n  return (\n    <Wrapper>\n      {getMovieDetailsProcess.status === Status.LOADING && (\n        <div>\n          <ImagePlaceholder />\n          <TitlePlaceholder />\n        </div>\n      )}\n      {getMovieDetailsProcess.status === Status.SUCCESS && (\n        <>\n          <ImageSection>\n            <Image\n              src={`https://image.tmdb.org/t/p/w500/${getMovieDetailsProcess.data.backdrop_path}`}\n              alt={getMovieDetailsProcess.data.original_title}\n            />\n          </ImageSection>\n          <MovieViewCardContentWrapper>\n            <PrimaryHeadline>\n              {getMovieDetailsProcess.data.original_title}\n            </PrimaryHeadline>\n            <InfoList>\n              <InfoListItem>\n                <InfoListItemText title={getRuntimeStr()}>\n                  {getRuntimeStr()}\n                </InfoListItemText>\n              </InfoListItem>\n              <InfoListItem>\n                <InfoListItemText>{getGenresStr()}</InfoListItemText>\n              </InfoListItem>\n              <InfoListItem>\n                <InfoListItemText\n                  title={getMovieDetailsProcess.data.release_date}\n                >\n                  {getMovieDetailsProcess.data.release_date.split(\"-\")[0]}\n                </InfoListItemText>\n              </InfoListItem>\n            </InfoList>\n            <MovieEvaluationSection\n              getMovieDetailsProcess={getMovieDetailsProcess}\n              getPairedUserProcess={props.getPairedUserProcess}\n              getUserItemProcess={props.getUserItemProcess}\n              evaluateItem={evaluateItem}\n              likeMovieProcess={likeMovieProcess}\n            />\n            <MovieViewSection>\n              <SecondaryHeadline>Overview</SecondaryHeadline>\n              <Text>{getMovieDetailsProcess.data.overview}</Text>\n            </MovieViewSection>\n            {/* <MovieViewSection>\n            <SecondaryHeadline>Details</SecondaryHeadline>\n            <DetailItemWrapper>\n              <MovieTertiaryHeadline color=\"gray\">\n                duration\n              </MovieTertiaryHeadline>\n              <Text>{getMovieDetailsProcess.data.runtime}</Text>\n            </DetailItemWrapper>\n          </MovieViewSection> */}\n          </MovieViewCardContentWrapper>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nconst MovieViewSection = styled.div`\n  text-align: start;\n  margin-top: ${`${sizingScale[6]}px`};\n`;\n\nconst MovieViewCardContentWrapper = styled(CardContentWrapper)`\n  margin-top: ${`${sizingScale[4]}px`};\n  text-align: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nconst ImageSection = styled.div`\n  margin: ${`${sizingScale[6] * -1}px`} 0 0 ${`${sizingScale[6] * -1}px`};\n  text-align: center;\n`;\n\nconst Image = styled.img`\n  width: ${`${sizingScale[13]}px`};\n`;\n\n// const DetailItemWrapper = styled.div`\n//   margin-top: 10px;\n//   display: flex;\n// `;\n\nconst Text = styled.p`\n  margin: 0;\n  font-size: ${`${fontSizes[0]}px`};\n  font-weight: 300;\n  margin-top: ${`${sizingScale[2]}px`};\n`;\n\nconst InfoListItemText = styled.h6`\n  margin: 0;\n  font-size: ${`${fontSizes[0]}px`};\n  font-weight: 400;\n  color: gray;\n`;\n\ntype HeadlineProps = {\n  color: string;\n};\n\nexport const MovieTertiaryHeadline = styled(TertiaryHeadline)`\n  color: ${(props: HeadlineProps) => props.color};\n`;\n\nconst InfoList = styled.ul`\n  list-style-type: none;\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n`;\n\nconst InfoListItem = styled.li`\n  padding: 0;\n  margin: 0 ${`${sizingScale[1]}px`};\n`;\n","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getMovieDetails.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/movieView/MovieViewUtilityFunctions.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/movieView/movieEvaluationSection/MovieEvaluationSection.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/movieView/movieEvaluationSection/userEvaluationItem/UserEvaluationItem.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/likedMoviesSection/LikedMoviesSection.tsx",["199"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Status, GetUserItemProcess } from \"../../../App\";\nimport { DownwardArrow } from \"../../../components/icons/DownwardArrow\";\nimport { LikedMoviesList, LikedMoviesListItem } from \"../../../types/Types\";\nimport { sizingScale, borderRadius } from \"../../../styles/Variables\";\nimport { TertiaryHeadline } from \"../../../styles/Styles\";\nimport { SecondaryHeadline } from \"../../../styles/Styles\";\nimport {\n  TransparentButton,\n  Mark,\n} from \"../../accountSettingsView/pictureSection/PictureSection\";\n\ntype Props = {\n  getUserItemProcess: GetUserItemProcess;\n  getPairedUserProcess: GetUserItemProcess;\n};\n\nexport const LikedMoviesSection = (props: Props) => {\n  const [yourLikesExpanded, setYourLikesExpanded] = React.useState<boolean>(\n    false\n  );\n  const [\n    partnersLikesExpanded,\n    setPartnersLikesExpanded,\n  ] = React.useState<boolean>(false);\n\n  const getLikedMovieListItems = (list: LikedMoviesList) => {\n    return list.L.map((listItem: LikedMoviesListItem) => {\n      if (props.getUserItemProcess.status === Status.SUCCESS) {\n        return (\n          <MovieListItem>\n            <Link\n              to={`/movie/${listItem.M.id.S}`}\n              title={`view movie ${listItem.M.id.S}`}\n            >\n              <TertiaryHeadline>{listItem.M.id.S}</TertiaryHeadline>\n            </Link>\n            <Text>{`(${listItem.M.score.N})`}</Text>\n            <TransparentButton onClick={() => {}} title=\"dislike movie\">\n              <Mark fontColor=\"salmon\" size={20}>\n                ✕\n              </Mark>\n            </TransparentButton>\n          </MovieListItem>\n        );\n      }\n    });\n  };\n\n  const isPartnered =\n    props.getUserItemProcess.status === Status.SUCCESS &&\n    props.getUserItemProcess.data.partner !== undefined;\n\n  return (\n    <LikedMoviesWrapper>\n      <SecondaryHeadline>Likes</SecondaryHeadline>\n      <>\n        {props.getUserItemProcess.status === Status.SUCCESS &&\n          props.getUserItemProcess.data.likedMovies && (\n            <MovieListWrapper>\n              <MovieListTriggerButton\n                title=\"your likes\"\n                onClick={() => setYourLikesExpanded(!yourLikesExpanded)}\n              >\n                <TertiaryHeadline>your likes</TertiaryHeadline>\n                <DownwardArrow size={15} />\n              </MovieListTriggerButton>\n              {yourLikesExpanded && (\n                <MovieList>\n                  {getLikedMovieListItems(\n                    props.getUserItemProcess.data.likedMovies\n                  )}\n                </MovieList>\n              )}\n            </MovieListWrapper>\n          )}\n        {props.getPairedUserProcess.status === Status.SUCCESS &&\n          props.getPairedUserProcess.data.likedMovies && (\n            <MovieListWrapper>\n              <MovieListTriggerButton\n                title=\"partners likes\"\n                onClick={() => setPartnersLikesExpanded(!partnersLikesExpanded)}\n              >\n                <TertiaryHeadline>{`${props.getPairedUserProcess.data.username.S}'s likes`}</TertiaryHeadline>\n                <DownwardArrow size={15} />\n              </MovieListTriggerButton>\n              {partnersLikesExpanded && (\n                <MovieList>\n                  {getLikedMovieListItems(\n                    props.getPairedUserProcess.data.likedMovies\n                  )}\n                </MovieList>\n              )}\n            </MovieListWrapper>\n          )}\n      </>\n      {isPartnered &&\n        props.getPairedUserProcess.status === Status.SUCCESS &&\n        props.getPairedUserProcess.data.likedMovies && (\n          <Link to=\"matches\">\n            <p>view matched movies</p>\n          </Link>\n        )}\n    </LikedMoviesWrapper>\n  );\n};\n\nconst MovieListTriggerButton = styled.button`\n  width: 100%;\n  background-color: white;\n  text-align: start;\n  padding: ${`${sizingScale[2]}px`} ${`${sizingScale[3]}px`};\n  border-radius: ${`${borderRadius}px`};\n  border: 1px solid gray;\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n`;\n\nconst MovieList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: ${`${sizingScale[4]}px`} 0 ${`${sizingScale[7]}px`} 0;\n  width: 100%;\n`;\n\nconst MovieListItem = styled.li`\n  padding: ${`${sizingScale[1]}px`} ${`${sizingScale[2]}px`};\n  background-color: lightgray;\n  border-radius: ${`${borderRadius}px`};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid gray;\n  margin: ${`${sizingScale[4]}px`} 0;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  color: gray;\n`;\n\nconst LikedMoviesWrapper = styled.div`\n  margin-top: ${`${sizingScale[5]}px`};\n  text-align: start;\n`;\n\nconst MovieListWrapper = styled.div`\n  margin-top: ${`${sizingScale[3]}px`};\n`;\n",{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":142,"column":6,"nodeType":"206","endLine":142,"endColumn":8,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":159,"column":6,"nodeType":"206","endLine":159,"endColumn":39,"suggestions":"209"},{"ruleId":"204","severity":1,"message":"210","line":178,"column":6,"nodeType":"206","endLine":178,"endColumn":33,"suggestions":"211"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"212","line":83,"column":6,"nodeType":"206","endLine":83,"endColumn":22,"suggestions":"213"},{"ruleId":"204","severity":1,"message":"214","line":100,"column":6,"nodeType":"206","endLine":100,"endColumn":8,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":46,"column":5,"nodeType":"218","messageId":"219","endLine":46,"endColumn":35},{"ruleId":"204","severity":1,"message":"220","line":67,"column":6,"nodeType":"206","endLine":67,"endColumn":39,"suggestions":"221"},{"ruleId":"216","severity":1,"message":"222","line":2,"column":18,"nodeType":"218","messageId":"219","endLine":2,"endColumn":27},{"ruleId":"204","severity":1,"message":"223","line":102,"column":6,"nodeType":"206","endLine":102,"endColumn":39,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":30,"column":55,"nodeType":"227","messageId":"228","endLine":30,"endColumn":57},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.","ArrayExpression",["231"],"React Hook React.useEffect has missing dependencies: 'getCurrentAuthenticatedUserProcess.status' and 'getUserItemProcess.status'. Either include them or remove the dependency array.",["232"],"React Hook React.useEffect has missing dependencies: 'getCurrentSessionProcess.data', 'getCurrentSessionProcess.status', 'getUserItemProcess.data.outgoingRequests', and 'getUserItemProcess.data.partner'. Either include them or remove the dependency array.",["233"],"React Hook React.useEffect has missing dependencies: 'isDragging', 'mouseXStartPosition', and 'startingScore'. Either include them or remove the dependency array.",["234"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["235"],"@typescript-eslint/no-unused-vars","'randomizeProfilePictureProcess' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useEffect has a missing dependency: 'queryingUpdatedItem'. Either include it or remove the dependency array.",["236"],"'keyframes' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.",["237"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [getUserInfo]",{"range":"252","text":"253"},"Update the dependencies array to be: [getCurrentAuthenticatedUserProcess.status, getCurrentSessionProcess.status, getUserItemProcess.status]",{"range":"254","text":"255"},"Update the dependencies array to be: [getCurrentSessionProcess.data, getCurrentSessionProcess.status, getUserItemProcess.data.outgoingRequests, getUserItemProcess.data.partner, getUserItemProcess.status]",{"range":"256","text":"257"},"Update the dependencies array to be: [isDragging, mouseXPosition, mouseXStartPosition, startingScore]",{"range":"258","text":"259"},"Update the dependencies array to be: [props]",{"range":"260","text":"261"},"Update the dependencies array to be: [props.getUserItemProcess.status, queryingUpdatedItem]",{"range":"262","text":"263"},"Update the dependencies array to be: [getMovie, props.getUserItemProcess.status]",{"range":"264","text":"265"},[4734,4736],"[getUserInfo]",[5287,5320],"[getCurrentAuthenticatedUserProcess.status, getCurrentSessionProcess.status, getUserItemProcess.status]",[5904,5931],"[getCurrentSessionProcess.data, getCurrentSessionProcess.status, getUserItemProcess.data.outgoingRequests, getUserItemProcess.data.partner, getUserItemProcess.status]",[2457,2473],"[isDragging, mouseXPosition, mouseXStartPosition, startingScore]",[3242,3244],"[props]",[2166,2199],"[props.getUserItemProcess.status, queryingUpdatedItem]",[3210,3243],"[getMovie, props.getUserItemProcess.status]"]