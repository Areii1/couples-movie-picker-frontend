[{"/home/arpeja/projects/couples-movie-picker-frontend/src/index.js":"1","/home/arpeja/projects/couples-movie-picker-frontend/src/App.tsx":"2","/home/arpeja/projects/couples-movie-picker-frontend/src/components/profileBall/ProfileBall.tsx":"3","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getTrendingMovies.ts":"4","/home/arpeja/projects/couples-movie-picker-frontend/src/config/Config.js":"5","/home/arpeja/projects/couples-movie-picker-frontend/src/components/puff/Puff.tsx":"6","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/uploadProfilePicture.js":"7","/home/arpeja/projects/couples-movie-picker-frontend/src/components/navigationBar/NavigationBar.tsx":"8","/home/arpeja/projects/couples-movie-picker-frontend/src/components/fireMeter/FireMeter.tsx":"9","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/FireIcon.tsx":"10","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/HeartIcon.tsx":"11","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/ImageIcon.tsx":"12","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getUser.ts":"13","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/removeProfilePicture.ts":"14","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/pairWithUser.ts":"15","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/SearchIcon.tsx":"16","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/PendingIcon.tsx":"17","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/cancelPairingRequest.tsx":"18","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/rejectIncomingRequest.ts":"19","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/acceptIncomingRequest.ts":"20","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/breakUpPartnership.ts":"21","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/randomizeProfilePicture.ts":"22","/home/arpeja/projects/couples-movie-picker-frontend/src/views/logIn/LogIn.tsx":"23","/home/arpeja/projects/couples-movie-picker-frontend/src/views/mainView/MainView.tsx":"24","/home/arpeja/projects/couples-movie-picker-frontend/src/views/signUp/SignUp.tsx":"25","/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/PartnershipView.tsx":"26","/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/searchSection/SearchSection.tsx":"27","/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/detailsSection/DetailsSection.tsx":"28","/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/requestsListSection/RequestsListSection.tsx":"29","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getUserInformation.ts":"30","/home/arpeja/projects/couples-movie-picker-frontend/src/views/accountSettingsView/pictureSection/PictureSection.tsx":"31","/home/arpeja/projects/couples-movie-picker-frontend/src/views/accountSettingsView/AccountSettingsView.tsx":"32","/home/arpeja/projects/couples-movie-picker-frontend/src/styles/Styles.ts":"33","/home/arpeja/projects/couples-movie-picker-frontend/src/styles/Variables.ts":"34","/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/ColdIcon.tsx":"35","/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/evaluateMovie.ts":"36"},{"size":316,"mtime":1608761078166,"results":"37","hashOfConfig":"38"},{"size":9395,"mtime":1611335078641,"results":"39","hashOfConfig":"38"},{"size":3608,"mtime":1610794795311,"results":"40","hashOfConfig":"38"},{"size":229,"mtime":1610988226464,"results":"41","hashOfConfig":"38"},{"size":819,"mtime":1611154864405,"results":"42","hashOfConfig":"38"},{"size":1637,"mtime":1609781213293,"results":"43","hashOfConfig":"38"},{"size":172,"mtime":1611150614595,"results":"44","hashOfConfig":"38"},{"size":2441,"mtime":1611163134908,"results":"45","hashOfConfig":"38"},{"size":2991,"mtime":1611306669466,"results":"46","hashOfConfig":"38"},{"size":2544,"mtime":1611162560493,"results":"47","hashOfConfig":"38"},{"size":2008,"mtime":1611163548141,"results":"48","hashOfConfig":"38"},{"size":2119,"mtime":1610465732723,"results":"49","hashOfConfig":"38"},{"size":241,"mtime":1611152302016,"results":"50","hashOfConfig":"38"},{"size":175,"mtime":1610488872326,"results":"51","hashOfConfig":"38"},{"size":243,"mtime":1610649011557,"results":"52","hashOfConfig":"38"},{"size":1416,"mtime":1610568139239,"results":"53","hashOfConfig":"38"},{"size":5054,"mtime":1610738652047,"results":"54","hashOfConfig":"38"},{"size":250,"mtime":1610659142282,"results":"55","hashOfConfig":"38"},{"size":259,"mtime":1611074038285,"results":"56","hashOfConfig":"38"},{"size":259,"mtime":1610980789968,"results":"57","hashOfConfig":"38"},{"size":253,"mtime":1611079048345,"results":"58","hashOfConfig":"38"},{"size":224,"mtime":1611085426181,"results":"59","hashOfConfig":"38"},{"size":5116,"mtime":1611163914196,"results":"60","hashOfConfig":"38"},{"size":5368,"mtime":1611339980369,"results":"61","hashOfConfig":"38"},{"size":3056,"mtime":1611159798217,"results":"62","hashOfConfig":"38"},{"size":3921,"mtime":1611172529699,"results":"63","hashOfConfig":"38"},{"size":6234,"mtime":1611173761627,"results":"64","hashOfConfig":"38"},{"size":11696,"mtime":1611163293936,"results":"65","hashOfConfig":"38"},{"size":6757,"mtime":1611162172391,"results":"66","hashOfConfig":"38"},{"size":181,"mtime":1611150809963,"results":"67","hashOfConfig":"38"},{"size":11215,"mtime":1611159652057,"results":"68","hashOfConfig":"38"},{"size":3791,"mtime":1611159876073,"results":"69","hashOfConfig":"38"},{"size":392,"mtime":1611162997483,"results":"70","hashOfConfig":"38"},{"size":282,"mtime":1611162993571,"results":"71","hashOfConfig":"38"},{"size":8948,"mtime":1611263054778,"results":"72","hashOfConfig":"38"},{"size":251,"mtime":1611308750187,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1ou7zv4",{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/home/arpeja/projects/couples-movie-picker-frontend/src/index.js",[],["152","153"],"/home/arpeja/projects/couples-movie-picker-frontend/src/App.tsx",["154","155","156"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { configureAmplify } from \"./config/Config\";\nimport { Route } from \"react-router-dom\";\nimport { NavigationBar } from \"./components/navigationBar/NavigationBar\";\nimport { MainView } from \"./views/mainView/MainView\";\nimport { LogIn } from \"./views/logIn/LogIn\";\nimport { SignUp } from \"./views/signUp/SignUp\";\nimport { AccountSettingsView } from \"./views/accountSettingsView/AccountSettingsView\";\nimport { getUser } from \"./apiService/getUser\";\nimport { PartnershipView } from \"./views/partnershipView/PartnershipView\";\nimport {\n  getCurrentSession,\n  getCurrentAuthenticatedUser,\n} from \"./apiService/getUserInformation\";\nimport { CognitoUserSession } from \"amazon-cognito-identity-js\";\nimport { UserInfo } from \"./types/Types\";\nimport { sizingScale, borderRadius, shadowColor } from \"./styles/Variables\";\n\nconfigureAmplify();\n\nexport enum Status {\n  INITIAL,\n  LOADING,\n  SUCCESS,\n  ERROR,\n}\n\nexport type Process =\n  | { status: Status.INITIAL }\n  | { status: Status.LOADING }\n  | { status: Status.SUCCESS; data: any }\n  | { status: Status.ERROR; error: Error };\n\nexport type GetCurrentSessionProcess =\n  | { status: Status.INITIAL }\n  | { status: Status.LOADING }\n  | { status: Status.SUCCESS; data: CognitoUserSession }\n  | { status: Status.ERROR; error: Error };\n\nexport type GetUserItemProcess =\n  | { status: Status.INITIAL }\n  | { status: Status.LOADING }\n  | { status: Status.SUCCESS; data: UserInfo }\n  | { status: Status.ERROR; error: Error };\n\nexport const App = () => {\n  const [\n    getCurrentSessionProcess,\n    setGetCurrentSessionProcess,\n  ] = React.useState<GetCurrentSessionProcess>({ status: Status.INITIAL });\n\n  const [\n    getCurrentAuthenticatedUserProcess,\n    setGetCurrentAuthenticatedUserProcess,\n  ] = React.useState<Process>({ status: Status.INITIAL });\n\n  const [\n    getPairedUserProcess,\n    setGetPairedUserProcess,\n  ] = React.useState<GetUserItemProcess>({ status: Status.INITIAL });\n\n  const [\n    getUserItemProcess,\n    setGetUserItemProcess,\n  ] = React.useState<GetUserItemProcess>({\n    status: Status.INITIAL,\n  });\n\n  const getPairedUser = async (username: string, jwtToken?: string) => {\n    try {\n      setGetPairedUserProcess({ status: Status.LOADING });\n      const getPairedUserResponse = await getUser(username, jwtToken);\n      setGetPairedUserProcess({\n        status: Status.SUCCESS,\n        data: getPairedUserResponse,\n      });\n    } catch (getUserError) {\n      setGetPairedUserProcess({ status: Status.ERROR, error: getUserError });\n    }\n  };\n\n  const getUserItem = async (username: string, jwtToken?: string) => {\n    try {\n      setGetUserItemProcess({ status: Status.LOADING });\n      const getUserResponse = await getUser(username, jwtToken);\n      setGetUserItemProcess({\n        status: Status.SUCCESS,\n        data: getUserResponse,\n      });\n    } catch (getUserError) {\n      setGetUserItemProcess({ status: Status.ERROR, error: getUserError });\n    }\n  };\n\n  const getUserInfo = async () => {\n    try {\n      setGetCurrentSessionProcess({ status: Status.LOADING });\n      const getCurrentSessionResponse = await getCurrentSession();\n      setGetCurrentSessionProcess({\n        status: Status.SUCCESS,\n        data: getCurrentSessionResponse,\n      });\n      try {\n        setGetCurrentAuthenticatedUserProcess({ status: Status.LOADING });\n        const getCurrentAuthenticatedUserResponse = await getCurrentAuthenticatedUser();\n        setGetCurrentAuthenticatedUserProcess({\n          status: Status.SUCCESS,\n          data: getCurrentAuthenticatedUserResponse,\n        });\n        getUserItem(\n          getCurrentAuthenticatedUserResponse.username,\n          getCurrentSessionResponse.getIdToken().getJwtToken()\n        );\n      } catch (getCurrentAuthenticatedUserError) {\n        setGetCurrentAuthenticatedUserProcess({\n          status: Status.ERROR,\n          error: getCurrentAuthenticatedUserError,\n        });\n      }\n    } catch (getCurrentSessionError) {\n      setGetCurrentSessionProcess({\n        status: Status.ERROR,\n        error: getCurrentSessionError,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    getUserInfo();\n  }, []);\n\n  React.useEffect(() => {\n    if (\n      getCurrentSessionProcess.status === Status.ERROR &&\n      (getCurrentAuthenticatedUserProcess.status === Status.SUCCESS ||\n        getUserItemProcess.status === Status.SUCCESS)\n    ) {\n      setGetCurrentAuthenticatedUserProcess({\n        status: Status.ERROR,\n        error: { name: \"error\", message: \"current session does not exist\" },\n      });\n      setGetUserItemProcess({\n        status: Status.ERROR,\n        error: { name: \"error\", message: \"current session does not exist\" },\n      });\n    }\n  }, [getCurrentSessionProcess.status]);\n\n  React.useEffect(() => {\n    if (\n      getUserItemProcess.status === Status.SUCCESS &&\n      getCurrentSessionProcess.status === Status.SUCCESS\n    ) {\n      if (getUserItemProcess.data.partner) {\n        getPairedUser(\n          getUserItemProcess.data.partner.S,\n          getCurrentSessionProcess.data.getIdToken().getJwtToken()\n        );\n      } else if (getUserItemProcess.data.outgoingRequests) {\n        getPairedUser(\n          getUserItemProcess.data.outgoingRequests.S,\n          getCurrentSessionProcess.data.getIdToken().getJwtToken()\n        );\n      }\n    }\n  }, [getUserItemProcess.status]);\n\n  // console.log(getUserItemProcess, \"getUserItemProcess\");\n  console.log(getCurrentSessionProcess, \"getCurrentSessionProcess\");\n  // console.log(\n  //   getCurrentAuthenticatedUserProcess,\n  //   \"getCurrentAuthenticatedUserProcess\"\n  // );\n  // console.log(getPairedUserProcess, \"getPairedUserProcess\");\n  return (\n    <ContentWrapper>\n      <NavigationBar\n        getCurrentAuthenticatedUserProcess={getCurrentAuthenticatedUserProcess}\n        getUserItemProcess={getUserItemProcess}\n      />\n      <MainCard>\n        <MainCardContentWrapper>\n          <Route exact path=\"/\">\n            {({ match }) => (\n              <CSSTransition\n                in={match !== null}\n                timeout={1000}\n                classNames=\"page\"\n                unmountOnExit\n              >\n                <div className=\"page\">\n                  <MainView\n                    getCurrentSessionProcess={getCurrentSessionProcess}\n                    getUserItemProcess={getUserItemProcess}\n                  />\n                </div>\n              </CSSTransition>\n            )}\n          </Route>\n          <Route exact path=\"/login\">\n            {({ match }) => (\n              <CSSTransition\n                in={match !== null}\n                timeout={300}\n                classNames=\"page\"\n                unmountOnExit\n              >\n                <div className=\"page\">\n                  <LogIn initiateSession={getUserInfo} />\n                </div>\n              </CSSTransition>\n            )}\n          </Route>\n          <Route exact path=\"/signup\">\n            {({ match }) => (\n              <CSSTransition\n                in={match !== null}\n                timeout={300}\n                classNames=\"page\"\n                unmountOnExit\n              >\n                <div className=\"page\">\n                  <SignUp />\n                </div>\n              </CSSTransition>\n            )}\n          </Route>\n          <Route exact path=\"/user\">\n            {({ match }) => (\n              <CSSTransition\n                in={match !== null}\n                timeout={300}\n                classNames=\"page\"\n                unmountOnExit\n              >\n                <div className=\"page\">\n                  <AccountSettingsView\n                    getCurrentSessionProcess={getCurrentSessionProcess}\n                    getCurrentAuthenticatedUserProcess={\n                      getCurrentAuthenticatedUserProcess\n                    }\n                    initiateSession={getUserInfo}\n                    getUserItemProcess={getUserItemProcess}\n                    getUserItem={getUserItem}\n                  />\n                </div>\n              </CSSTransition>\n            )}\n          </Route>\n          <Route exact path=\"/love\">\n            <PartnershipView\n              getCurrentAuthenticatedUserProcess={\n                getCurrentAuthenticatedUserProcess\n              }\n              getUserItemProcess={getUserItemProcess}\n              getCurrentSessionProcess={getCurrentSessionProcess}\n              getPairedUserProcess={getPairedUserProcess}\n              getPairedUser={getPairedUser}\n              getUserItem={getUserItem}\n            />\n          </Route>\n        </MainCardContentWrapper>\n      </MainCard>\n    </ContentWrapper>\n  );\n};\n\nconst ContentWrapper = styled.div`\n  margin: auto;\n  width: ${`${sizingScale[13]}px`};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst MainCard = styled.div`\n  width: 100%;\n  background-color: white;\n  margin: ${`${sizingScale[6]}px`} 0;\n  border-radius: ${`${borderRadius}px`};\n  padding: ${`${sizingScale[6]}px`};\n  min-height: ${`${sizingScale[14]}px`};\n  display: flex;\n  justify-content: start;\n  overflow: hidden;\n  box-shadow: 10px 5px 5px ${shadowColor};\n`;\n\nconst MainCardContentWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n`;\n",["157","158"],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/profileBall/ProfileBall.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getTrendingMovies.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/config/Config.js",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/puff/Puff.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/uploadProfilePicture.js",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/navigationBar/NavigationBar.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/fireMeter/FireMeter.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/FireIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/HeartIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/ImageIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getUser.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/removeProfilePicture.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/pairWithUser.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/SearchIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/PendingIcon.tsx",[],["159","160"],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/cancelPairingRequest.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/rejectIncomingRequest.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/acceptIncomingRequest.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/breakUpPartnership.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/randomizeProfilePicture.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/logIn/LogIn.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/mainView/MainView.tsx",["161","162"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Process, Status } from \"../../App\";\nimport { FireMeter } from \"../../components/fireMeter/FireMeter\";\nimport { PrimaryHeadline } from \"../../styles/Styles\";\nimport { sizingScale } from \"../../styles/Variables\";\nimport { getTrendingMovies } from \"../../apiService/getTrendingMovies\";\nimport { evaluateMovie } from \"../../apiService/evaluateMovie\";\n\ntype Props = {\n  getCurrentSessionProcess: Process;\n  getUserItemProcess: Process;\n};\n\nexport const MainView = (props: Props) => {\n  const [fireMeterSwitch, setFireMeterSwitch] = React.useState<any>({\n    position: 50,\n    locked: false,\n  });\n\n  const [\n    getTrendingMoviesProcess,\n    setGetTrendingMoviesProcess,\n  ] = React.useState<Process>({ status: Status.INITIAL });\n\n  const [swipingIndex, setSwipingIndex] = React.useState<number>(0);\n\n  const [likeMovieProcess, setLikeMovieProcess] = React.useState<Process>({\n    status: Status.INITIAL,\n  });\n\n  const getMovies = async () => {\n    try {\n      setGetTrendingMoviesProcess({ status: Status.LOADING });\n      const getTrendingMoviesResponse = await getTrendingMovies();\n      const parsedGetTrendingMoviesResponse = await getTrendingMoviesResponse.json();\n      setGetTrendingMoviesProcess({\n        status: Status.SUCCESS,\n        data: parsedGetTrendingMoviesResponse,\n      });\n    } catch (getTrendingMoviesError) {\n      setGetTrendingMoviesProcess({\n        status: Status.ERROR,\n        error: getTrendingMoviesError,\n      });\n    }\n  };\n\n  const evualuateCurrentItem = async () => {\n    if (\n      props.getCurrentSessionProcess.status === Status.SUCCESS &&\n      getTrendingMoviesProcess.status === Status.SUCCESS\n    ) {\n      try {\n        setLikeMovieProcess({ status: Status.LOADING });\n        const likeMovieResponse = await evaluateMovie(\n          props.getCurrentSessionProcess.data.getIdToken().getJwtToken(),\n          getTrendingMoviesProcess.data.results[swipingIndex].id,\n          fireMeterSwitch.position\n        );\n        setSwipingIndex(swipingIndex + 1);\n        setFireMeterSwitch({ position: 50, locked: false });\n        setLikeMovieProcess({\n          status: Status.SUCCESS,\n          data: likeMovieResponse,\n        });\n      } catch (likeMovieError) {\n        alert(\"failed to evaluate movie\");\n        setSwipingIndex(swipingIndex + 1);\n        setFireMeterSwitch({ position: 50, locked: false });\n        setLikeMovieProcess({\n          status: Status.ERROR,\n          error: likeMovieError,\n        });\n      }\n    }\n  };\n\n  const keyDownHandler = (event: any) => {\n    if (!fireMeterSwitch.locked) {\n      if (event.key === \"ArrowLeft\") {\n        setFireMeterSwitch((freshState: any) => {\n          if (freshState.position - 5 <= 0) {\n            return {\n              position: 0,\n              locked: false,\n            };\n          }\n          return {\n            position: freshState.position - 5,\n            locked: false,\n          };\n        });\n      } else if (event.key === \"ArrowRight\") {\n        setFireMeterSwitch((freshState: any) => {\n          if (freshState.position + 5 >= 100) {\n            return {\n              position: 100,\n              locked: false,\n            };\n          }\n          return {\n            position: freshState.position + 5,\n            locked: false,\n          };\n        });\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", keyDownHandler);\n    return () => {\n      window.removeEventListener(\"keyDown\", keyDownHandler);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (props.getUserItemProcess.status === Status.SUCCESS) {\n      getMovies();\n    }\n  }, [props.getUserItemProcess.status]);\n\n  if (getTrendingMoviesProcess.status === Status.SUCCESS) {\n    const filteredList = getTrendingMoviesProcess.data.results.filter(\n      (movie: any) => {\n        if (props.getUserItemProcess.status === Status.SUCCESS) {\n          return (\n            props.getUserItemProcess.data.likedMovies.L.find(\n              (likedMovie: any) => movie.id === parseInt(likedMovie.M.id.S, 10)\n            ) === undefined\n          );\n        } else {\n          return false;\n        }\n      }\n    );\n    return (\n      <Wrapper>\n        <ImageSection>\n          <Image\n            src={`https://image.tmdb.org/t/p/w500/${filteredList[swipingIndex].backdrop_path}`}\n            alt={filteredList[swipingIndex].original_title}\n          />\n        </ImageSection>\n        <DetailsSection>\n          <Title>{filteredList[swipingIndex].original_title}</Title>\n          <FireMeter\n            fireMeterSwitch={fireMeterSwitch}\n            setFireMeterSwitch={setFireMeterSwitch}\n            evualuateCurrentItem={evualuateCurrentItem}\n          />\n        </DetailsSection>\n      </Wrapper>\n    );\n  } else {\n    return <div />;\n  }\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nconst ImageSection = styled.div`\n  margin: ${`${sizingScale[6] * -1}px`} 0 0 ${`${sizingScale[6] * -1}px`};\n  text-align: center;\n`;\n\nconst Title = styled(PrimaryHeadline)`\n  color: #808080;\n  word-wrap: break-word;\n`;\n\nconst DetailsSection = styled.div`\n  margin: ${`${sizingScale[3]}px`} 0 0 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: ${`${sizingScale[13] - sizingScale[6] * 2}px`};\n`;\n\nconst Image = styled.img`\n  width: ${`${sizingScale[13]}px`};\n`;\n","/home/arpeja/projects/couples-movie-picker-frontend/src/views/signUp/SignUp.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/PartnershipView.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/searchSection/SearchSection.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/detailsSection/DetailsSection.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/partnershipView/requestsListSection/RequestsListSection.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/getUserInformation.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/views/accountSettingsView/pictureSection/PictureSection.tsx",["163","164"],"import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { uploadProfilePicture } from \"../../../apiService/uploadProfilePicture\";\nimport { removeProfilePicture } from \"../../../apiService/removeProfilePicture\";\nimport { ImageIcon } from \"../../../components/icons/ImageIcon\";\nimport { ProfileBall } from \"../../../components/profileBall/ProfileBall\";\nimport { randomizeProfilePicture } from \"../../../apiService/randomizeProfilePicture\";\nimport { bucketUrl } from \"../../../config/Config\";\nimport { Process, Status } from \"../../../App\";\nimport { Section } from \"../AccountSettingsView\";\nimport { Puff } from \"../../../components/puff/Puff\";\nimport { SecondaryHeadline } from \"../../../styles/Styles\";\nimport { sizingScale, borderRadius, fontSizes } from '../../../styles/Variables';\n\ntype Props = {\n  getCurrentAuthenticatedUserProcess: Process;\n  getUserItemProcess: Process;\n  getCurrentSessionProcess: Process;\n  getUserItem: (username: string) => void;\n};\n\nexport const PictureSection = (props: Props) => {\n  const [\n    uploadPictureProcess,\n    setUploadPictureProcess,\n  ] = React.useState<Process>({\n    status: Status.INITIAL,\n  });\n\n  const [\n    removePictureProcess,\n    setRemovePictureProcess,\n  ] = React.useState<Process>({\n    status: Status.INITIAL,\n  });\n\n  const [\n    randomizeProfilePictureProcess,\n    setRandomizeProfilePictureProcess,\n  ] = React.useState<Process>({ status: Status.INITIAL });\n\n  const [hoveringProfileBall, setHoveringProfileBall] = React.useState<boolean>(\n    false\n  );\n\n  const [selectedFile, setSelectedFile] = React.useState<any>(undefined);\n  const [queryingUpdatedItem, setQueryingUpdatedItem] = React.useState<boolean>(\n    false\n  );\n\n  React.useEffect(() => {\n    if (\n      queryingUpdatedItem &&\n      props.getUserItemProcess.status === Status.SUCCESS\n    ) {\n      setSelectedFile(undefined);\n      setQueryingUpdatedItem(false);\n    }\n  }, [props.getUserItemProcess.status]);\n\n  const uploadPicture = async () => {\n    if (props.getCurrentAuthenticatedUserProcess.status === Status.SUCCESS) {\n      try {\n        setUploadPictureProcess({ status: Status.LOADING });\n        const uploadPictureResponse = await uploadProfilePicture(\n          selectedFile.name,\n          selectedFile,\n          props.getCurrentAuthenticatedUserProcess.data.username\n        );\n        setUploadPictureProcess({\n          status: Status.SUCCESS,\n          data: uploadPictureResponse,\n        });\n        alert(\"uploaded profile picture\");\n        setQueryingUpdatedItem(true);\n        props.getUserItem(\n          props.getCurrentAuthenticatedUserProcess.data.username\n        );\n      } catch (uploadPictureError) {\n        setUploadPictureProcess({\n          status: Status.ERROR,\n          error: uploadPictureError,\n        });\n      }\n    }\n  };\n\n  const removePicture = async () => {\n    if (props.getCurrentAuthenticatedUserProcess.status === Status.SUCCESS) {\n      try {\n        setRemovePictureProcess({ status: Status.LOADING });\n        const uploadPictureResponse = await removeProfilePicture(\n          props.getCurrentAuthenticatedUserProcess.data.username\n        );\n        setRemovePictureProcess({\n          status: Status.SUCCESS,\n          data: uploadPictureResponse,\n        });\n        alert(\"removed profile picture\");\n        setQueryingUpdatedItem(true);\n        props.getUserItem(\n          props.getCurrentAuthenticatedUserProcess.data.username\n        );\n      } catch (uploadPictureError) {\n        setRemovePictureProcess({\n          status: Status.ERROR,\n          error: uploadPictureError,\n        });\n      }\n    }\n  };\n\n  const randomizePicture = async () => {\n    if (\n      props.getCurrentAuthenticatedUserProcess.status === Status.SUCCESS &&\n      props.getCurrentSessionProcess.status === Status.SUCCESS\n    ) {\n      try {\n        setRandomizeProfilePictureProcess({ status: Status.LOADING });\n        const randomizeProfilePictureResponse = await randomizeProfilePicture(\n          props.getCurrentSessionProcess.data.getIdToken().getJwtToken()\n        );\n        setRandomizeProfilePictureProcess({\n          status: Status.SUCCESS,\n          data: randomizeProfilePictureResponse,\n        });\n        alert(\"changed profile picture\");\n        setQueryingUpdatedItem(true);\n        props.getUserItem(\n          props.getCurrentAuthenticatedUserProcess.data.username\n        );\n      } catch (randomizeProfilePictureError) {\n        setRandomizeProfilePictureProcess({\n          status: Status.ERROR,\n          error: randomizeProfilePictureError,\n        });\n      }\n    }\n  };\n\n  const selectFile = (event: any) => {\n    if (uploadPictureProcess.status !== Status.LOADING) {\n      if (uploadPictureProcess.status !== Status.INITIAL) {\n        setUploadPictureProcess({ status: Status.INITIAL });\n      }\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n\n  const getImage = () => {\n    if (selectedFile) {\n      return URL.createObjectURL(selectedFile);\n    } else if (props.getUserItemProcess.status === Status.SUCCESS) {\n      if (props.getUserItemProcess.data.profilePicture) {\n        return `${bucketUrl}/${props.getUserItemProcess.data.profilePicture.S}`;\n      } else {\n        return undefined;\n      }\n    } else {\n      return undefined;\n    }\n  };\n\n  const hasProfilePicture = () => {\n    if (props.getUserItemProcess.status === Status.SUCCESS) {\n      if (props.getUserItemProcess.data.profilePicture) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  const getFirstName = () => {\n    if (\n      props.getCurrentAuthenticatedUserProcess.status === Status.SUCCESS &&\n      props.getUserItemProcess.status === Status.SUCCESS\n    ) {\n      return props.getCurrentAuthenticatedUserProcess.data.username;\n    } else {\n      return undefined;\n    }\n  };\n\n  return (\n    <Section>\n      <SecondaryHeadline>Picture</SecondaryHeadline>\n      <PictureUploadWrapper>\n        <ProfileBallWrapper\n          onMouseEnter={() => setHoveringProfileBall(true)}\n          onMouseLeave={() => setHoveringProfileBall(false)}\n        >\n          {hoveringProfileBall &&\n            (uploadPictureProcess.status === Status.INITIAL ||\n              uploadPictureProcess.status === Status.SUCCESS) &&\n            selectedFile === undefined &&\n            removePictureProcess.status === Status.INITIAL &&\n            hasProfilePicture() && (\n              <ProfileBallOverlay>\n                <TransparentButton\n                  onClick={() => removePicture()}\n                  title=\"remove picture\"\n                >\n                  <Mark fontColor=\"salmon\">✕</Mark>\n                </TransparentButton>\n              </ProfileBallOverlay>\n            )}\n          {selectedFile !== undefined &&\n            uploadPictureProcess.status === Status.INITIAL && (\n              <ProfileBallOverlay>\n                <TransparentButton\n                  onClick={() => uploadPicture()}\n                  title=\"confirm\"\n                >\n                  <Mark fontColor=\"lightgreen\">✓</Mark>\n                </TransparentButton>\n                <TransparentButton\n                  onClick={() => setSelectedFile(undefined)}\n                  title=\"reject\"\n                >\n                  <Mark fontColor=\"salmon\">✕</Mark>\n                </TransparentButton>\n              </ProfileBallOverlay>\n            )}\n          {(uploadPictureProcess.status === Status.LOADING ||\n            queryingUpdatedItem ||\n            removePictureProcess.status === Status.LOADING) && (\n            <LoadingIconWrapper>\n              <Puff size={75} fill=\"white\" />\n            </LoadingIconWrapper>\n          )}\n          <ProfileBall\n            firstName={getFirstName()}\n            image={getImage()}\n            isCurrentUser={false}\n            size={100}\n            animate={false}\n            fontSize={50}\n            showText\n            shadow\n            border\n          />\n        </ProfileBallWrapper>\n        <Dropzone>\n          <FileInput\n            type=\"file\"\n            onChange={(event) => selectFile(event)}\n            accept=\"image/*\"\n          />\n          <ImageIcon size={40} animate={true} />\n          <DropzoneText>Click or drag to upload image</DropzoneText>\n        </Dropzone>\n        <TransparentButton\n          onClick={randomizePicture}\n          title=\"choose random image\"\n        >\n          <RandomImageText>randomize</RandomImageText>\n        </TransparentButton>\n      </PictureUploadWrapper>\n    </Section>\n  );\n};\n\nconst fadeIn = keyframes`\n  from {\n    background-color: rgb(0, 0, 0, 0.05);\n  }\n  to {\n    background-color: rgb(0, 0, 0, 0.5);\n  }\n`;\n\nconst ProfileBallOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: rgb(0, 0, 0, 0.5);\n  animation: ${fadeIn} 0.3s linear forwards;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${`${sizingScale[8]}px`};\n  height: ${`${sizingScale[8]}px`};\n`;\n\nconst LoadingIconWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: ${`${sizingScale[8]}px`};\n  height: ${`${sizingScale[8]}px`};\n  background-color: rgb(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Dropzone = styled.div`\n  width: ${`${sizingScale[10]}px`};\n  height: ${`${sizingScale[10] / 2}px`};\n  position: relative;\n  border: 1px dotted black;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: ${`${borderRadius}px`};\n`;\n\nconst FileInput = styled.input`\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: ${`${sizingScale[10]}px`};\n  height: ${`${sizingScale[10] / 2}px`};\n  cursor: pointer;\n`;\n\nconst PictureUploadWrapper = styled.div`\n  margin-top: ${`${sizingScale[2]}px`};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ProfileBallWrapper = styled.div`\n  width: ${`${sizingScale[8]}px`};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  position: relative;\n  border-radius: ${`${sizingScale[8]}px`};\n`;\n\nconst DropzoneText = styled.p`\n  font-size: ${`${fontSizes[0]}px`};\n`;\n\nconst RandomImageText = styled.p`\n  font-size: ${`${fontSizes[0]}px`};\n  color: blue;\n`;\n\ntype MarkProps = {\n  fontColor: string;\n  size?: number;\n};\n\nconst markFadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst getColorHover = (fontColor: string) => keyframes`\n  from {\n    color: ${fontColor};\n  }\n  to {\n    color: ${fontColor === \"lightgreen\" ? \"green\" : \"red\"};\n  }\n`;\n\nexport const Mark = styled.h5`\n  color: ${(props: MarkProps) => props.fontColor};\n  animation: ${markFadeIn} 0.3s linear forwards;\n  font-size: ${(props: MarkProps) => (props.size ? `${props.size}px` : `${sizingScale[6]}px`)};\n  margin: 0;\n  text-align: center;\n  vertical-align: center;\n  :hover {\n    animation: ${(props: MarkProps) => getColorHover(props.fontColor)} 0.3s\n      linear forwards;\n  }\n`;\n\nexport const TransparentButton = styled.button`\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","/home/arpeja/projects/couples-movie-picker-frontend/src/views/accountSettingsView/AccountSettingsView.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/styles/Styles.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/styles/Variables.ts",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/components/icons/ColdIcon.tsx",[],"/home/arpeja/projects/couples-movie-picker-frontend/src/apiService/evaluateMovie.ts",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":133,"column":6,"nodeType":"171","endLine":133,"endColumn":8,"suggestions":"172"},{"ruleId":"169","severity":1,"message":"173","line":150,"column":6,"nodeType":"171","endLine":150,"endColumn":39,"suggestions":"174"},{"ruleId":"169","severity":1,"message":"175","line":169,"column":6,"nodeType":"171","endLine":169,"endColumn":33,"suggestions":"176"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"165","replacedBy":"177"},{"ruleId":"167","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":28,"column":10,"nodeType":"181","messageId":"182","endLine":28,"endColumn":26},{"ruleId":"169","severity":1,"message":"183","line":116,"column":6,"nodeType":"171","endLine":116,"endColumn":8,"suggestions":"184"},{"ruleId":"179","severity":1,"message":"185","line":38,"column":5,"nodeType":"181","messageId":"182","endLine":38,"endColumn":35},{"ruleId":"169","severity":1,"message":"186","line":59,"column":6,"nodeType":"171","endLine":59,"endColumn":39,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.","ArrayExpression",["190"],"React Hook React.useEffect has missing dependencies: 'getCurrentAuthenticatedUserProcess.status' and 'getUserItemProcess.status'. Either include them or remove the dependency array.",["191"],"React Hook React.useEffect has missing dependencies: 'getCurrentSessionProcess.data', 'getCurrentSessionProcess.status', 'getUserItemProcess.data.outgoingRequests', and 'getUserItemProcess.data.partner'. Either include them or remove the dependency array.",["192"],["188"],["189"],"@typescript-eslint/no-unused-vars","'likeMovieProcess' is assigned a value but never used.","Identifier","unusedVar","React Hook React.useEffect has a missing dependency: 'keyDownHandler'. Either include it or remove the dependency array.",["193"],"'randomizeProfilePictureProcess' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'queryingUpdatedItem'. Either include it or remove the dependency array.",["194"],"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [getUserInfo]",{"range":"205","text":"206"},"Update the dependencies array to be: [getCurrentAuthenticatedUserProcess.status, getCurrentSessionProcess.status, getUserItemProcess.status]",{"range":"207","text":"208"},"Update the dependencies array to be: [getCurrentSessionProcess.data, getCurrentSessionProcess.status, getUserItemProcess.data.outgoingRequests, getUserItemProcess.data.partner, getUserItemProcess.status]",{"range":"209","text":"210"},"Update the dependencies array to be: [keyDownHandler]",{"range":"211","text":"212"},"Update the dependencies array to be: [props.getUserItemProcess.status, queryingUpdatedItem]",{"range":"213","text":"214"},[4262,4264],"[getUserInfo]",[4815,4848],"[getCurrentAuthenticatedUserProcess.status, getCurrentSessionProcess.status, getUserItemProcess.status]",[5432,5459],"[getCurrentSessionProcess.data, getCurrentSessionProcess.status, getUserItemProcess.data.outgoingRequests, getUserItemProcess.data.partner, getUserItemProcess.status]",[3549,3551],"[keyDownHandler]",[1933,1966],"[props.getUserItemProcess.status, queryingUpdatedItem]"]